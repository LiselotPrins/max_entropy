(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    238282,       4783]
NotebookOptionsPosition[    229393,       4632]
NotebookOutlinePosition[    229798,       4648]
CellTagsIndexPosition[    229755,       4645]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["One constraint max-entropy", "Title",
 CellChangeTimes->{{3.950591872358135*^9, 
  3.9505918776988354`*^9}},ExpressionUUID->"5415a105-1f06-b548-b338-\
529004f56948"],

Cell["", "Text",
 CellChangeTimes->{{3.955948010777487*^9, 3.955948031610218*^9}, {
  3.955948447269022*^9, 
  3.955948447727728*^9}},ExpressionUUID->"e86dbde9-e93a-4548-a41c-\
726748731862"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"findMaxEntropyDistribution", "[", 
    RowBox[{"f_", ",", " ", "F_", ",", "assumptions_", ",", "bounds_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "g", ",", "Z", ",", "logZ", ",", "D1", ",", "soln", ",", "l", ",", 
       "normalizationConstant"}], "}"}], ",", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Define", " ", "functions", " ", "necessary", " ", "for", " ", 
        "solving", " ", "the", " ", "system", " ", "of", " ", 
        RowBox[{"equations", ".", "\n", "\t", 
         RowBox[{"Assumptions", ":", " ", 
          RowBox[{
          "f", " ", "is", " ", "a", " ", "function", " ", "of", " ", "one", " ",
            "variable"}]}]}]}], ",", " ", 
       RowBox[{"and", " ", "F", " ", "a", " ", 
        RowBox[{"scalar", "."}]}]}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"x_", ",", "a_"}], "]"}], ":=", 
       RowBox[{"Exp", "[", 
        RowBox[{"a", " ", 
         RowBox[{"f", "[", "x", "]"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"Z", "[", "a_", "]"}], "   ", ":=", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{"x", ",", "a"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"bounds", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"bounds", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"Assumptions", "->", "assumptions"}]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"logZ", "[", "a_", "]"}], ":=", 
       RowBox[{"PowerExpand", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          RowBox[{"Z", "[", "a", "]"}], "]"}], ",", 
         RowBox[{"Assumptions", "->", "assumptions"}]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"D1", "[", "a_", "]"}], "  ", ":=", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"logZ", "[", "a", "]"}], ",", "a"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"Solve", " ", "system", " ", "of", " ", 
        RowBox[{"equations", "."}]}], " ", "*)"}], "\n", "\t", 
      RowBox[{"soln", "     ", "=", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"D1", "[", "a", "]"}], "==", "F"}], ",", " ", "a", ",", 
         RowBox[{"Assumptions", "->", "assumptions"}]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Get", " ", "argument", " ", "of", " ", "a", " ", "that", " ", 
        "solves", " ", "the", " ", 
        RowBox[{"equations", "."}]}], " ", "*)"}], "\n", "\t", 
      RowBox[{"l", "        ", "=", 
       RowBox[{"a", "/.", 
        RowBox[{"soln", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"normalizationConstant", "=", 
       RowBox[{"Z", "[", "l", "]"}]}], ";", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"Resulting", " ", "ME", " ", "density", " ", 
        RowBox[{"is", ":"}]}], " ", "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"x", ",", "l"}], "]"}], "/", "normalizationConstant"}]}]}], 
    "\n", "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Ad", " ", "hoc", " ", "expansion", " ", "of", " ", "previous", " ", 
    "function", " ", "so", " ", "that", " ", "Cauchy", " ", "can", " ", 
    "also", " ", "be", " ", 
    RowBox[{"solved", "."}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"findMaxEntropyDistribution2", "[", 
   RowBox[{"f_", ",", "F_", ",", "assumptions_", ",", "bounds_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "g", ",", "Z", ",", "logZ", ",", "D1", ",", "soln", ",", "l", ",", 
      "normalizationConstant"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"x_", ",", "a_"}], "]"}], ":=", 
      RowBox[{"Exp", "[", 
       RowBox[{"a", " ", 
        RowBox[{"f", "[", "x", "]"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      RowBox[{"Z", "[", "a_", "]"}], "   ", ":=", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"x", ",", "a"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"bounds", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"bounds", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"Assumptions", "->", "assumptions"}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"logZ", "[", "a_", "]"}], ":=", 
      RowBox[{"PowerExpand", "[", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Z", "[", "a", "]"}], "]"}], ",", 
        RowBox[{"Assumptions", "->", "assumptions"}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"D1", "[", "a_", "]"}], "  ", ":=", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"logZ", "[", "a", "]"}], ",", "a"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"soln", "     ", "=", 
      RowBox[{"Check", "[", "\n", "\t\t\t\t\t", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"D1", "[", "a", "]"}], "==", "F"}], ",", " ", "a", ",", 
          RowBox[{"Assumptions", "->", "assumptions"}]}], "]"}], ",", "\n", 
        "\t\t\t\t\t", 
        RowBox[{"FindInstance", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"D1", "[", "a", "]"}], "==", "F"}], ",", " ", "a"}], 
         "]"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t", 
     RowBox[{"l", "        ", "=", 
      RowBox[{"a", "/.", 
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"normalizationConstant", "=", 
      RowBox[{"Z", "[", "l", "]"}]}], ";", "\n", "\t", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"x", ",", "l"}], "]"}], "/", "normalizationConstant"}]}]}], 
   "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.9506028475124702`*^9, 3.95060287545907*^9}, {
   3.9506029633675766`*^9, 3.9506029690562744`*^9}, {3.950849217226242*^9, 
   3.9508492329640827`*^9}, {3.9508492905938377`*^9, 3.9508493016681957`*^9}, 
   3.9508495219899864`*^9, {3.950849587047449*^9, 3.950849600295986*^9}, {
   3.950849834936268*^9, 3.9508498413446903`*^9}, {3.950851890695261*^9, 
   3.950851983527977*^9}, {3.9508520560340233`*^9, 3.9508520584749928`*^9}, {
   3.9508523561378326`*^9, 3.9508523649286423`*^9}, 3.950853428981039*^9, {
   3.955948137878622*^9, 3.9559482862862797`*^9}, {3.955948333030676*^9, 
   3.9559484377150974`*^9}, {3.9559519150816708`*^9, 3.955951945961523*^9}, 
   3.956561171964203*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"62ecd7df-e04d-8849-9b3d-73c7496b3251"],

Cell[CellGroupData[{

Cell["The Normal Distribution", "Subsection",
 CellChangeTimes->{{3.95059781330402*^9, 3.9505978423239384`*^9}, {
  3.9559486663640823`*^9, 
  3.955948677099964*^9}},ExpressionUUID->"8a269a2c-b42e-6047-957d-\
95344a223a8d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bounds", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "\n", 
 RowBox[{
  RowBox[{"F", "=", 
   SuperscriptBox["\[Sigma]", "2"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"assumptions", "=", "  ", 
   RowBox[{
    RowBox[{"\[Sigma]", ">", "0"}], " ", "&&", " ", 
    RowBox[{"\[Mu]", "\[Element]", "Reals"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.9505918856321106`*^9, 3.950592028259409*^9}, {
   3.950592106815792*^9, 3.950592108845787*^9}, {3.950595259556181*^9, 
   3.9505952641901054`*^9}, 3.9505973285793324`*^9, {3.9505974362368374`*^9, 
   3.950597475916956*^9}, {3.950597748711891*^9, 3.9505977530449753`*^9}, {
   3.9506018473995094`*^9, 3.950601867283785*^9}, {3.9506019182544727`*^9, 
   3.9506019230373707`*^9}, {3.9506019689053593`*^9, 
   3.9506019712659473`*^9}, {3.9506027115774612`*^9, 
   3.9506027135622063`*^9}, {3.950602917681675*^9, 3.9506029328416862`*^9}, 
   3.9506039633899574`*^9, {3.9559484646377068`*^9, 3.9559484673906536`*^9}, 
   3.955948592150961*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"690ae404-30c7-0f49-9a54-ff88825b8c2d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pNormal", "[", "x_", "]"}], "=", 
  RowBox[{"findMaxEntropyDistribution", "[", 
   RowBox[{"f", ",", "F", ",", "assumptions", ",", "bounds"}], 
   "]"}]}]], "Code",
 CellChangeTimes->{
  3.950602811650469*^9, 3.9506028858326817`*^9, {3.950602939173809*^9, 
   3.950602939966156*^9}, {3.950603041269907*^9, 3.9506030435110455`*^9}, {
   3.950852136531809*^9, 3.950852161993967*^9}, {3.9559485952835674`*^9, 
   3.955948616783655*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"369d5bbe-8f16-5542-89f0-5aa90bc7a052"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]]], "Output",
 CellChangeTimes->{{3.950602942220112*^9, 3.950602951363474*^9}, 
   3.950603054698881*^9, 3.9506761474585133`*^9, {3.9506762101430187`*^9, 
   3.9506762225834656`*^9}, 3.950849316509321*^9, 3.9508520694738216`*^9, {
   3.950852143742241*^9, 3.9508521769748554`*^9}, 3.955948477356596*^9, {
   3.955948607930622*^9, 3.955948627354313*^9}, 3.956048242158119*^9, 
   3.956048296968132*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"8e47f4ce-0545-694a-b20a-88ea4c5f3fa2"]
}, Open  ]],

Cell["Time it took to find this ME density: 0.875 s.", "Text",
 CellChangeTimes->{{3.9508521526034775`*^9, 3.9508521593011417`*^9}, {
  3.9508522565008545`*^9, 3.9508522566702633`*^9}, {3.9559487024075203`*^9, 
  3.955948718286484*^9}, {3.9559489811025753`*^9, 
  3.9559489816824207`*^9}},ExpressionUUID->"dc96835f-81a4-2b4f-a954-\
0d4b0e5d0b93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"pNormal", "[", "x", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Mu]", "->", "m"}], ",", 
        RowBox[{"\[Sigma]", "->", "s"}]}], "}"}]}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.5"}], "}"}]}]}], "\n", "\t", "]"}], ",", "\n", 
   "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "0", ",", "\"\<\[Mu]\>\""}], "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", " ", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", "\n", 
   "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", "1", ",", "\"\<\[Sigma]\>\""}], "}"}], ",", "0.5", ",",
      "2", ",", " ", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}]}], "\n", 
  "]"}]], "Code",
 InitializationCell->True,
 CellChangeTimes->{
  3.9506027830314255`*^9, {3.950603046125929*^9, 3.950603046791128*^9}, {
   3.9506034185552635`*^9, 3.9506034415185986`*^9}, {3.950603472812998*^9, 
   3.9506034876430397`*^9}, 3.9559487220577354`*^9},
 CellLabel->"In[39]:=",ExpressionUUID->"34947bb2-c521-9e41-8475-1e3b363aff47"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = 0, $CellContext`s$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`m$$], 0, "\[Mu]"}, -1, 1, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`s$$], 1, "\[Sigma]"}, 0.5, 2, ControlType -> 
      Manipulator}}, Typeset`size$$ = {
    360., {117.37100463600112`, 123.10293822975112`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`m$$ = 0, $CellContext`s$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Plot[
        ReplaceAll[
         $CellContext`pNormal[$CellContext`x], {$CellContext`\[Mu] -> \
$CellContext`m$$, $CellContext`\[Sigma] -> $CellContext`s$$}], \
{$CellContext`x, -3, 3}, PlotRange -> {0, 0.5}], 
      "Specifications" :> {{{$CellContext`m$$, 0, "\[Mu]"}, -1, 1, Appearance -> 
         "Labeled"}, {{$CellContext`s$$, 1, "\[Sigma]"}, 0.5, 2, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405.1, {169.28184447975113`, 175.01377807350113`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.950603003426258*^9, 3.9506030548525524`*^9, 
  3.9506034424943237`*^9, 3.9506034886542816`*^9, 3.950676147976698*^9, 
  3.95067622808494*^9, 3.95084932192708*^9, 3.9508520717365913`*^9, 
  3.955948725281063*^9, 3.956048243599289*^9, 3.9560482990707874`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"f93ae575-084c-f04e-9d3a-f1b3b9a5c6e4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Laplace", "Subsection",
 CellChangeTimes->{{3.9505958081354485`*^9, 3.95059580880044*^9}, {
  3.9505978729906387`*^9, 
  3.9505978747045918`*^9}},ExpressionUUID->"18fcb4b8-6d32-ab4f-9513-\
2228ea15f8b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bounds", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"Abs", "[", 
    RowBox[{"x", "-", "\[Mu]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"F", "=", "b"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"assumptions", " ", "=", " ", 
   RowBox[{
    RowBox[{"a", "<", "0"}], " ", "&&", " ", 
    RowBox[{"\[Mu]", "\[Element]", "Reals"}], " ", "&&", " ", 
    RowBox[{"b", ">", "0"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{
  3.9505958115537376`*^9, {3.9505978842323036`*^9, 3.9505979382506905`*^9}, {
   3.9505990508442345`*^9, 3.9505990633178062`*^9}, {3.950599132547695*^9, 
   3.9505991451875496`*^9}, {3.950599435793091*^9, 3.9505994393193607`*^9}, {
   3.950602690729368*^9, 3.950602723804451*^9}, {3.9506030892814026`*^9, 
   3.950603107618202*^9}, {3.950852074218916*^9, 3.9508520752163982`*^9}, {
   3.955948744008541*^9, 3.9559487663449383`*^9}, {3.955948806744381*^9, 
   3.9559488111483746`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"73437db2-248e-9347-a2df-146a6ecb5505"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pLaplace", "[", "x_", "]"}], "=", 
  RowBox[{"findMaxEntropyDistribution", "[", 
   RowBox[{"f", ",", "F", ",", "assumptions", ",", "bounds"}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.9506030592770176`*^9, 3.950603081434973*^9}, {
   3.950852080790571*^9, 3.9508520942547207`*^9}, {3.9508521293577557`*^9, 
   3.9508521295766125`*^9}, 3.95594873975066*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"08c32365-3cff-0845-932f-aaf34f68a72a"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"Abs", "[", 
      RowBox[{"x", "-", "\[Mu]"}], "]"}], "b"]}]], 
  RowBox[{"2", " ", "b"}]]], "Output",
 CellChangeTimes->{
  3.9506031217634277`*^9, 3.9506761522723064`*^9, 3.9506762461147785`*^9, 
   3.9508493324225616`*^9, {3.9508520827100296`*^9, 3.950852089060028*^9}, {
   3.950852121824196*^9, 3.950852133337202*^9}, {3.955948858587572*^9, 
   3.955948867512163*^9}, 3.9560482499434395`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"43590d29-8e7b-f640-b02e-8434a7deb41c"]
}, Open  ]],

Cell["Time it took to find this ME density: 1.18 s.", "Text",
 CellChangeTimes->{{3.9508521219283714`*^9, 3.950852126002205*^9}, {
  3.950852253283243*^9, 3.950852253473427*^9}, {3.955948889865177*^9, 
  3.955948895895733*^9}, {3.955948986487301*^9, 
  3.955948987622116*^9}},ExpressionUUID->"99a855a4-df3d-2c4c-8f90-\
ac701c33ddca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"pLaplace", "[", "x", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Mu]", "->", "m"}], ",", 
        RowBox[{"b", "->", "be"}]}], "}"}]}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.5"}], "}"}]}]}], "\n", "\t", "]"}], ",", "\n", 
   "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "0", ",", "\"\<\[Mu]\>\""}], "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", " ", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", "\n", 
   "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"be", ",", "1", ",", "\"\<b\>\""}], "}"}], ",", "0.5", ",", "2",
      ",", " ", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}]}], "\n", 
  "]"}]], "Code",
 CellChangeTimes->{{3.9506031272394066`*^9, 3.950603166533518*^9}, {
  3.950603277164137*^9, 3.9506032867864895`*^9}, {3.950603378372774*^9, 
  3.9506034065279293`*^9}, {3.9506034941879215`*^9, 3.9506034957103863`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"6ceb6a7a-0c8e-314e-b0de-11856197ed79"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`be$$ = 1, $CellContext`m$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`m$$], 0, "\[Mu]"}, -1, 1, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`be$$], 1, "b"}, 0.5, 2, ControlType -> Manipulator}},
     Typeset`size$$ = {266.62, {89.2409704734876, 94.9729040672376}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`be$$ = 1, $CellContext`m$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Plot[
        ReplaceAll[
         $CellContext`pLaplace[$CellContext`x], {$CellContext`\[Mu] -> \
$CellContext`m$$, $CellContext`b -> $CellContext`be$$}], {$CellContext`x, -3, 
         3}, PlotRange -> {0, 0.5}], 
      "Specifications" :> {{{$CellContext`m$$, 0, "\[Mu]"}, -1, 1, Appearance -> 
         "Labeled"}, {{$CellContext`be$$, 1, "b"}, 0.5, 2, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{57.1796875, {1.498046875, 9.48974609375}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.950603133968151*^9, 3.9506031687996902`*^9, {3.9506032787201786`*^9, 
   3.9506032875053864`*^9}, {3.9506034009837513`*^9, 3.9506034073899307`*^9}, 
   3.950603496522835*^9, 3.9506761523371716`*^9, 3.9508493327084103`*^9, 
   3.9559489073978825`*^9, 3.956048250068594*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"0437cbff-33e5-c549-b6e5-06256284f4ac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exponential", "Subsection",
 CellChangeTimes->{{3.9505995812937737`*^9, 3.950599583719055*^9}, {
  3.9506035681565437`*^9, 
  3.9506035725792904`*^9}},ExpressionUUID->"3a0d2b81-2f2d-a349-aa5c-\
1e7ad238b90f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bounds", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", "x"}], "\n", 
 RowBox[{
  RowBox[{"F", "=", 
   RowBox[{"1", "/", "\[Lambda]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"assumptions", " ", "=", " ", 
   RowBox[{
    RowBox[{"a", "<", "0"}], " ", "&&", " ", 
    RowBox[{"\[Lambda]", ">", "0"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.95059961053022*^9, 3.9505997561998596`*^9}, {
   3.950599899949005*^9, 3.950599934631815*^9}, 3.9506018338520145`*^9, {
   3.950602072636751*^9, 3.950602109084593*^9}, 3.950602820674387*^9, {
   3.9506031411474056`*^9, 3.95060314709787*^9}, {3.9506035836432858`*^9, 
   3.9506036181154385`*^9}, {3.950603652268276*^9, 3.9506036683206234`*^9}, {
   3.9506039366336594`*^9, 3.950603939223673*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"98236043-0a55-2544-a4c7-44a125b0ffa6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pExponential", "[", "x_", "]"}], "=", 
  RowBox[{"findMaxEntropyDistribution", "[", 
   RowBox[{"f", ",", "F", ",", "assumptions", ",", "bounds"}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.9506018068159294`*^9, 3.950601812679613*^9}, {
   3.950602111786232*^9, 3.9506021137776775`*^9}, {3.9506021509888477`*^9, 
   3.9506021568131332`*^9}, 3.950602804000307*^9, {3.9506036946946697`*^9, 
   3.9506037056065483`*^9}, {3.950852187765114*^9, 3.9508522095846024`*^9}, 
   3.9559489253472137`*^9, 3.955949026824341*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"11f03299-e598-0a4f-a934-c466b615f12b"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "x"}], " ", "\[Lambda]"}]], " ", "\[Lambda]"}]], "Output",
 CellChangeTimes->{{3.950601816573408*^9, 3.950601841303112*^9}, {
   3.9506019286776485`*^9, 3.950602013371784*^9}, {3.95060208627026*^9, 
   3.950602126837183*^9}, 3.950602161048479*^9, 3.950602558972233*^9, 
   3.9506026521690273`*^9, 3.950602739472044*^9, 3.9506037110658855`*^9, 
   3.950676153548252*^9, 3.950849338376236*^9, {3.950852192565996*^9, 
   3.9508522107795334`*^9}, 3.9559489288237724`*^9, 3.9559490281693497`*^9, 
   3.956048251070099*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"fb3833fe-4b58-8749-9b47-9ba7dd511076"]
}, Open  ]],

Cell["Time it took to find this ME density: 0.05 s.", "Text",
 CellChangeTimes->{{3.9508521976906414`*^9, 3.9508522041223545`*^9}, {
  3.950852248932335*^9, 3.95085224904323*^9}, {3.95594896702516*^9, 
  3.955948975747246*^9}},ExpressionUUID->"edcf18fa-e832-d44c-b7bb-\
72d9b016c547"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"pExponential", "[", "x", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", "->", "l"}], "}"}]}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "\"\<\[Lambda]\>\""}], "}"}], ",", "0.5", ",",
      "2", ",", " ", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}]}], "\n", 
  "]"}]], "Code",
 CellChangeTimes->{{3.9506021639749336`*^9, 3.9506022532324486`*^9}, {
  3.950602305352066*^9, 3.9506023360284824`*^9}, {3.950603767124151*^9, 
  3.950603838019108*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"2af60dc8-464c-f144-82e1-39c89c704bbd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`l$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`l$$], 1, "\[Lambda]"}, 0.5, 2, ControlType -> 
      Manipulator}}, Typeset`size$$ = {
    360., {117.37100463600112`, 123.10293822975112`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`l$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Plot[
        ReplaceAll[
         $CellContext`pExponential[$CellContext`x], {$CellContext`\[Lambda] -> \
$CellContext`l$$}], {$CellContext`x, 0, 5}, PlotRange -> {0, 1}], 
      "Specifications" :> {{{$CellContext`l$$, 1, "\[Lambda]"}, 0.5, 2, 
         Appearance -> "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405.1, {158.58184447975114`, 164.31377807350114`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.950603826173052*^9, 3.9506038390188026`*^9}, 
   3.9506761536433983`*^9, 3.9508493401327133`*^9, 3.9559489945476265`*^9, 
   3.95604825124839*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"657d42e7-fa93-9f4e-a81a-2380a8ef3643"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pareto", "Subsection",
 CellChangeTimes->{{3.950604006517212*^9, 
  3.9506040074516735`*^9}},ExpressionUUID->"060bf144-0cc8-1447-8aec-\
578f39d68506"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bounds", "=", 
    RowBox[{"{", 
     RowBox[{"\[Kappa]", ",", "\[Infinity]"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"Log", "[", "x", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"F", "=", 
   RowBox[{
    FractionBox["1", "\[Alpha]"], "+", 
    RowBox[{"Log", "[", "\[Kappa]", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"assumptions", " ", "=", "  ", 
   RowBox[{
    RowBox[{"\[Kappa]", ">", "0"}], " ", "&&", " ", 
    RowBox[{"\[Alpha]", ">", "0"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.950604027785698*^9, 3.9506041105817127`*^9}, {
   3.950604195540579*^9, 3.950604235062149*^9}, {3.9506044109257126`*^9, 
   3.9506044198276215`*^9}, 3.9559490607396126`*^9, 3.9559491903885174`*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"364301af-e461-2945-af0c-62d703020152"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pPareto", "[", "x_", "]"}], "=", 
  RowBox[{"findMaxEntropyDistribution", "[", 
   RowBox[{"f", ",", "F", ",", "assumptions", ",", "bounds"}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.9506042749643536`*^9, 3.9506043178721256`*^9}, 
   3.9508494249699936`*^9, {3.950849537220846*^9, 3.950849562980871*^9}, 
   3.950849758540127*^9, 3.950849791414236*^9, {3.95085222240127*^9, 
   3.9508522393048553`*^9}, {3.955949039530506*^9, 3.955949040813196*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"ad6ee6df-417e-bd4f-91e2-43336cb96ab2"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", 
   RowBox[{
    RowBox[{"-", "1"}], "-", "\[Alpha]"}]], " ", "\[Alpha]", " ", 
  SuperscriptBox["\[Kappa]", "\[Alpha]"]}]], "Output",
 CellChangeTimes->{
  3.9506043219574184`*^9, 3.950604431821665*^9, 3.950676156893673*^9, 
   3.9506762745606136`*^9, 3.9508493494957237`*^9, {3.950849431965315*^9, 
   3.9508494427986965`*^9}, {3.9508497497692986`*^9, 3.9508497626066227`*^9}, 
   3.950849794912775*^9, 3.9508498673254814`*^9, {3.9508522217333603`*^9, 
   3.950852228057169*^9}, 3.950852285571926*^9, {3.9559490489429016`*^9, 
   3.9559490772407036`*^9}, 3.9560482572862034`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"400add9d-3f58-1344-8a6c-e5458dc8d893"]
}, Open  ]],

Cell["Time it took to find this ME density: 0.64 s.", "Text",
 CellChangeTimes->{{3.950852231271925*^9, 3.9508522448574867`*^9}, {
  3.955950057830347*^9, 
  3.955950063419281*^9}},ExpressionUUID->"096a7608-f64f-fd42-b711-\
1f7475257cba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"pPareto", "[", "x", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Kappa]", "->", "k"}], ",", 
        RowBox[{"\[Alpha]", "->", "a"}]}], "}"}]}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{"x", ",", "k", ",", "5"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}]}], "\n", "\t", "]"}], ",", 
   "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "\"\<\[Kappa]\>\""}], "}"}], ",", "0.5", ",",
      "3", ",", " ", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", "\n", 
   "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", "\"\<\[Alpha]\>\""}], "}"}], ",", "0.5", ",",
      "3", ",", " ", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}]}], "\n", 
  "]"}]], "Code",
 CellChangeTimes->{{3.9506043879820633`*^9, 3.950604397752659*^9}, {
   3.950604431236759*^9, 3.9506044541735*^9}, {3.950604510931881*^9, 
   3.9506045725203934`*^9}, {3.9506046262996902`*^9, 3.950604626904007*^9}, {
   3.950604920362049*^9, 3.9506049350322857`*^9}, 3.9559491619887257`*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"ac4b9872-1d8f-4a48-9978-25b310b9afa8"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1, $CellContext`k$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`k$$], 1, "\[Kappa]"}, 0.5, 3, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`a$$], 1, "\[Alpha]"}, 0.5, 3, ControlType -> 
      Manipulator}}, Typeset`size$$ = {
    360., {112.36792811622146`, 118.09986170997146`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1, $CellContext`k$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Plot[
        ReplaceAll[
         $CellContext`pPareto[$CellContext`x], {$CellContext`\[Kappa] -> \
$CellContext`k$$, $CellContext`\[Alpha] -> $CellContext`a$$}], \
{$CellContext`x, $CellContext`k$$, 5}, PlotRange -> {{0, 5}, {0, 3}}], 
      "Specifications" :> {{{$CellContext`k$$, 1, "\[Kappa]"}, 0.5, 3, 
         Appearance -> "Labeled"}, {{$CellContext`a$$, 1, "\[Alpha]"}, 0.5, 3,
          Appearance -> "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405.1, {164.27876795997145`, 170.01070155372145`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.9506045398666496`*^9, 3.9506045730641193`*^9}, 
   3.9506046309642982`*^9, 3.9506049355951366`*^9, 3.950676157019293*^9, 
   3.9506762757269974`*^9, 3.9508493497610016`*^9, 3.950852274118866*^9, 
   3.9559491644271545`*^9, 3.956048257500122*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"0f3d0f27-2394-f645-a734-0c3d6f1365ef"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cauchy", "Subsection",
 CellChangeTimes->{{3.9506048814776974`*^9, 3.950604883343069*^9}, 
   3.9506049646085587`*^9, {3.9506050451279716`*^9, 
   3.9506050471913223`*^9}},ExpressionUUID->"61d2324d-0406-e242-9481-\
2774605a15e1"],

Cell["\<\
With the Cauchy distribution, we run into trouble: the system of equations \
can\[CloseCurlyQuote]t be solved using normal methods. \
\>", "Text",
 CellChangeTimes->{{3.9559493054705486`*^9, 3.9559493453590794`*^9}, {
  3.955949837709713*^9, 
  3.9559498539332104`*^9}},ExpressionUUID->"f0fcdf03-1c44-5141-97b1-\
414470d9f4ed"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bounds", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"F", "=", 
   RowBox[{"2", " ", 
    RowBox[{"Log", "[", "2", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"assumptions", " ", "=", " ", 
   RowBox[{"a", "<", "0"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.9506050564326134`*^9, 3.950605100894123*^9}, {
   3.9506053821370296`*^9, 3.9506053879728203`*^9}, {3.950605436710884*^9, 
   3.950605442342516*^9}, {3.950606160148588*^9, 3.9506061660205097`*^9}, {
   3.9506062239862556`*^9, 3.9506062301760674`*^9}, {3.95060646939686*^9, 
   3.950606476117754*^9}, 3.9506067257620068`*^9, 3.955949184648838*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"b1b3b076-80c6-0042-8653-557b242ea0e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pCauchy", "[", "x_", "]"}], "=", 
  RowBox[{"findMaxEntropyDistribution", "[", 
   RowBox[{"f", ",", "F", ",", "assumptions", ",", "bounds"}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.9506051099809666`*^9, 3.950605119115488*^9}, {
   3.9508522951427402`*^9, 3.950852314996517*^9}, 3.9559492009962063`*^9, {
   3.955949246371376*^9, 3.9559492561136417`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"dbc18a99-b2ef-e04c-8d20-2e24088b2f88"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "nsmet", 
   "\"This system cannot be solved with the methods available to Solve. Try \
Reduce or FindInstance instead.\"", 2, 52, 1, 21432115739531605963, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.9560492330030365`*^9},
 CellLabel->
  "During evaluation of \
In[52]:=",ExpressionUUID->"f667c5c1-5323-ec45-a883-03ae30c1c2b7"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "nsmet", 
   "\"This system cannot be solved with the methods available to Solve. Try \
Reduce or FindInstance instead.\"", 2, 52, 2, 21432115739531605963, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.9560492342190876`*^9},
 CellLabel->
  "During evaluation of \
In[52]:=",ExpressionUUID->"7a14c137-1b1c-c641-a2e4-cecbc8b1d3bf"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\
\\\"PolyGamma\\\", \\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \
RowBox[{RowBox[{\\\"-\\\", FractionBox[\\\"1\\\", \\\"2\\\"]}], \\\"-\\\", \\\
\"a\\\"}]}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"PolyGamma\\\", \\\"[\\\", \
RowBox[{\\\"0\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"a\\\"}]}], \
\\\"]\\\"}]}], \\\"\[Equal]\\\", RowBox[{\\\"2\\\", \\\" \\\", \
RowBox[{\\\"Log\\\", \\\"[\\\", \\\"2\\\", \\\"]\\\"}]}]}], \\\"}\\\"}]\\) is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing.\"", 2, 52, 3, 21432115739531605963, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.956049234553713*^9},
 CellLabel->
  "During evaluation of \
In[52]:=",ExpressionUUID->"4f541d41-f13e-0d41-913e-84effc2126e7"],

Cell[BoxData[
 TemplateBox[{
  "Integrate", "idiv", 
   "\"Integral of \\!\\(\\*SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\"+\\\", SuperscriptBox[\\\"x\\\", \\\"2\\\"]}], \\\")\\\
\"}], RowBox[{\\\"a\\\", \\\"/.\\\", \\\"\[VeryThinSpace]\\\", \
RowBox[{RowBox[{RowBox[{\\\"Log\\\", \\\"[\\\", \\\"4\\\", \\\"]\\\"}], \\\"+\
\\\", RowBox[{\\\"PolyGamma\\\", \\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \
RowBox[{RowBox[{\\\"-\\\", FractionBox[\\\"1\\\", \\\"2\\\"]}], \\\"-\\\", \\\
\"a\\\"}]}], \\\"]\\\"}]}], \\\"\[Equal]\\\", RowBox[{\\\"PolyGamma\\\", \
\\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"a\\\"}]}], \\\
\"]\\\"}]}]}]]\\) does not converge on \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}]\\).\"", 2, 52, 4, 21432115739531605963, 
   "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.956049248228903*^9},
 CellLabel->
  "During evaluation of \
In[52]:=",ExpressionUUID->"13c9bdee-edf1-c642-bca9-3f4dc1efcce1"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], ")"}], 
   RowBox[{"a", "/.", "\[VeryThinSpace]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"PolyGamma", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", "a"}]}], "]"}]}], "+", 
      RowBox[{"PolyGamma", "[", 
       RowBox[{"0", ",", 
        RowBox[{"-", "a"}]}], "]"}]}], "\[Equal]", 
     RowBox[{"2", " ", 
      RowBox[{"Log", "[", "2", "]"}]}]}]}]], "/", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "2"]}], ")"}], 
     RowBox[{"a", "/.", "\[VeryThinSpace]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"PolyGamma", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], "-", "a"}]}], "]"}]}], "+", 
        RowBox[{"PolyGamma", "[", 
         RowBox[{"0", ",", 
          RowBox[{"-", "a"}]}], "]"}]}], "\[Equal]", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "2", "]"}]}]}]}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"a", "<", "0"}]}]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.950605123537113*^9, 3.9506051640822277`*^9, 3.9506054194181385`*^9, 
   3.9506064387211456`*^9, 3.950606496198702*^9, 3.9506761900942574`*^9, 
   3.9508493968545856`*^9, 3.95084963284453*^9, {3.9508523076108*^9, 
   3.950852328974684*^9}, 3.9559492357831078`*^9, 3.9560482740531178`*^9, 
   3.956049248308012*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"0bbb0c69-4cac-ef4a-a6ae-5fc847278fea"]
}, Open  ]],

Cell["\<\
So an ad-hoc approach is used: if a set of equations can\[CloseCurlyQuote]t \
be solved, find one instance of a solutions. In this case, it works. This is \
only possible since the Cauchy distribution has not parameters.\
\>", "Text",
 CellChangeTimes->{{3.955949939409033*^9, 3.955949997014824*^9}, {
  3.9559500422341995`*^9, 
  3.955950043063181*^9}},ExpressionUUID->"5196ed32-9de0-4540-952c-\
e8595e4decbe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pCauchy", "[", "x_", "]"}], "=", 
  RowBox[{"findMaxEntropyDistribution2", "[", 
   RowBox[{"f", ",", "F", ",", "assumptions", ",", "bounds"}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.955949270540243*^9, 3.9559492719945736`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"47473018-46be-7e4c-a4ee-2a167422ef50"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "nsmet", 
   "\"This system cannot be solved with the methods available to Solve. Try \
Reduce or FindInstance instead.\"", 2, 50, 8, 21431459409500383973, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.955949278984331*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"be8264e6-1063-c744-ace9-12331309aeeb"],

Cell[BoxData[
 TemplateBox[{
  "FindInstance", "ztest1", 
   "\"Unable to decide whether numeric quantity \
\\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \\\"EulerGamma\\\"}], \\\"-\\\", RowBox[{\
\\\"2\\\", \\\" \\\", RowBox[{\\\"Log\\\", \\\"[\\\", \\\"2\\\", \
\\\"]\\\"}]}], \\\"-\\\", RowBox[{\\\"PolyGamma\\\", \\\"[\\\", RowBox[{\\\"0\
\\\", \\\",\\\", FractionBox[\\\"1\\\", \\\"2\\\"]}], \\\"]\\\"}]}]\\) is \
equal to zero. Assuming it is.\"", 2, 50, 9, 21431459409500383973, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.955949283161764*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"3c3c09c6-0362-d14e-85f9-1d9f1664b5ea"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.955949283865061*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"61ef0485-9aba-b042-a807-6e015c85f300"]
}, Open  ]],

Cell["Time it took to find this ME density: 4.39 s.", "Text",
 CellChangeTimes->{{3.9508523270516605`*^9, 3.9508523362500954`*^9}, {
  3.955950079714777*^9, 
  3.9559500868736534`*^9}},ExpressionUUID->"f7c1938a-bd52-cb4e-849b-\
6040e38b2c12"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test/unknown distribution", "Subsection",
 CellChangeTimes->{{3.9511956057083015`*^9, 
  3.9511956131404343`*^9}},ExpressionUUID->"0d3fdf4a-51dd-354a-957e-\
95ed2f728ca3"],

Cell["\<\
Now an experiment: try out some constraints for which I \
don\[CloseCurlyQuote]t know the correct ME-distribution.\
\>", "Text",
 CellChangeTimes->{{3.955950118940624*^9, 3.955950121961157*^9}, {
  3.955950267798149*^9, 3.9559502944418297`*^9}, {3.955950333800247*^9, 
  3.9559503525019073`*^9}},ExpressionUUID->"fa543add-4594-604a-bdce-\
3092022c7ab5"],

Cell[CellGroupData[{

Cell["Third moment ", "Subsubsection",
 CellChangeTimes->{{3.9559507725176697`*^9, 
  3.955950787391411*^9}},ExpressionUUID->"83f774ca-9395-8746-a622-\
1507d667332d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Known", " ", "third", " ", "moment", " ", "on", " ", "positive", " ", 
    "real", " ", "domain"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "c", "]"}], "\n", 
   RowBox[{
    RowBox[{"bounds", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x_", "]"}], ":=", 
     SuperscriptBox["x", "3"]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"F", "=", " ", "c"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"assumptions", " ", "=", "  ", 
     RowBox[{"c", ">", "0"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"pThirdPos", "[", "x_", "]"}], "=", 
    RowBox[{
     RowBox[{"findMaxEntropyDistribution", "[", 
      RowBox[{"f", ",", "F", ",", "assumptions", ",", "bounds"}], "]"}], "//",
      "Timing"}]}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"pThirdPos", "[", "x_", "]"}], "=", 
     RowBox[{
      RowBox[{"pThirdPos", "[", "x", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.951195628846506*^9, 3.951195657277916*^9}, {
   3.951195719117626*^9, 3.9511957197435017`*^9}, {3.9511957800293236`*^9, 
   3.951195814417511*^9}, {3.9511959795818634`*^9, 3.9511960093401184`*^9}, {
   3.951196113501196*^9, 3.9511961261201687`*^9}, 3.951196162890028*^9, 
   3.9559500952576313`*^9, {3.955950375818468*^9, 3.9559504062814198`*^9}, {
   3.955950525219324*^9, 3.955950526160187*^9}, {3.955950873165653*^9, 
   3.9559509100479527`*^9}, {3.956562665879057*^9, 3.956562669668745*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"5802b14d-30ba-2b4a-970a-c74793b7573f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.84375`", ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["3", 
      RowBox[{"2", "/", "3"}]], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "3"], 
        RowBox[{"3", " ", "c"}]]}]]}], 
    RowBox[{
     SuperscriptBox["c", 
      RowBox[{"1", "/", "3"}]], " ", 
     RowBox[{"Gamma", "[", 
      FractionBox["1", "3"], "]"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9511957320889416`*^9, {3.951195787773508*^9, 3.951195814792036*^9}, 
   3.951195988886425*^9, 3.9511960242613773`*^9, 3.951196127309305*^9, 
   3.951196163922838*^9, 3.955950421533022*^9, 3.955950548744282*^9, 
   3.955950915505457*^9, 3.9560490303255157`*^9, 3.9565612554153137`*^9, 
   3.9565626773588142`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"d48325de-97a3-c245-a163-fe9b6898450f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"pThirdPos", "[", "x", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"c", "->", "\[Delta]"}], "}"}]}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}]}], "\n", "\t", "]"}], ",", 
   "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Delta]", ",", "1", ",", "\"\<k\>\""}], "}"}], ",", "0.1", ",",
      "5", ",", " ", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}]}], "\n", 
  "]"}]], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.9511956777710285`*^9, 3.9511956839014263`*^9}, 
   3.951195744694916*^9, {3.951195816702585*^9, 3.9511958176894035`*^9}, 
   3.9511959826479435`*^9, {3.951196025935133*^9, 3.951196096378687*^9}, {
   3.951196149512186*^9, 3.951196149918524*^9}, {3.9559504710560303`*^9, 
   3.9559504760976467`*^9}, {3.955950926250326*^9, 3.9559509271282635`*^9}, {
   3.956562672084385*^9, 3.9565626722253017`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"5c37e2fa-95e0-3644-b70e-76fdd2a841be"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Delta]$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Delta]$$], 1, "k"}, 0.1, 5, ControlType -> 
      Manipulator}}, Typeset`size$$ = {
    360., {112.36792811622146`, 118.09986170997146`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Delta]$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Plot[
        ReplaceAll[
         $CellContext`pThirdPos[$CellContext`x], {$CellContext`c -> \
$CellContext`\[Delta]$$}], {$CellContext`x, 0, 5}, 
        PlotRange -> {{0, 5}, {0, 3}}], 
      "Specifications" :> {{{$CellContext`\[Delta]$$, 1, "k"}, 0.1, 5, 
         Appearance -> "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405.1, {153.57876795997146`, 159.31070155372146`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.951195736531044*^9, 3.9511957630065193`*^9}, {
   3.951195800588007*^9, 3.951195818940117*^9}, {3.9511961292325783`*^9, 
   3.9511961515603275`*^9}, {3.9559504527213364`*^9, 3.9559504894959106`*^9}, 
   3.9559505511526756`*^9, {3.955950915834135*^9, 3.955950929149351*^9}, 
   3.9560490305290775`*^9, 3.956562677530899*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"3123cc50-30d1-6a41-be2f-5ef4e78514ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Create", " ", "Figure", " ", "for", " ", "thesis"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"plot", " ", "=", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"pThirdPos", "[", "x", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{"c", "->", "\[Delta]"}], "}"}]}], ",", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", "\n", "\t\t", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", "\n", "\t\t", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{"x", ",", "\"\<pdf\>\""}], "}"}]}], ",", "\n", "\t\t", 
       RowBox[{
       "PlotLabel", 
        "->", "\"\<ME density on [0,\[Infinity]] with E[\!\(\*SuperscriptBox[\
\(X\), \(3\)]\)]=c and c=1\>\""}]}], "\n", "\t", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"eq", " ", "=", " ", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"pThirdPos", "[", "x", "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2.2", ",", "0.6"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"txt", " ", "=", " ", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", "eq", "}"}], "]"}]}], ";"}], "\n", 
   RowBox[{"Show", "[", 
    RowBox[{"plot", ",", "txt"}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.95656128503553*^9, 3.956561295425665*^9}, {
  3.9565613536773853`*^9, 3.9565614002579403`*^9}, {3.9565614487992344`*^9, 
  3.9565614528940983`*^9}, {3.9565615890054684`*^9, 3.9565616012349033`*^9}, {
  3.956561641100868*^9, 3.956561679263113*^9}, {3.9565617853923893`*^9, 
  3.95656178815629*^9}, {3.9565618278752346`*^9, 3.9565618764558372`*^9}, {
  3.956561911226326*^9, 3.9565620284635715`*^9}, {3.9565620700938835`*^9, 
  3.956562084457144*^9}, {3.9565621167625275`*^9, 3.9565622529959545`*^9}, {
  3.9565626573126945`*^9, 3.956562698291502*^9}, {3.956562794898041*^9, 
  3.9565628528428936`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"07def65b-26a6-8e42-b6e1-2b5a8bffb7e1"],

Cell[BoxData[
 GraphicsBox[{
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.24, 0.6, 0.8], AbsoluteThickness[2], Opacity[1.], 
          LineBox[CompressedData["
1:eJwV1nc8V98bAHB7+yyljIwSSUmI0ufe8yBSJLsIISJFZojka2eUVFZkh4oy
IyMkZCW7UpH1ISUrm9/n99d9vV/nnnvu85znPPeK21w3sGNiYGBwYmZg+P81
xd+G7bCtL342njJaM0BDDd1iOufETNHsqdiR/3ursSZITOwKStYkDf3fhNiy
V1wDbshzNKLv/06pjRZlFfNBz24yNPzfB2Zs727Z30Z+Vtez/+9vhCeb6/2B
SPN3r9f/LfGUU2l1LQTFe8sf/b+vYZ5OS6J30FGzoJFquot7hrIW1KOQ0VTj
jf979arO4Kz9PRT839qfKrrTGAfvLGncRyveoqf+7xPt9/f+649Fj/cfDqyk
m5Zwsm7hykMkMysb/4buKNsN8/m1R8hz346QCrrl5IqXZ6PjkcdBmlY53d1r
Dg//iiaiaMu0H2V032gSkZspTELVQrhmKd2CD3paf6sno67Gtz7FdNdYRthP
96agvHd7vArpttkPzL/sU9F1b4fjL+lmWrv5ccEvDX0/E/XuBd09Q8a7FjTS
UdTLaJ5ndD9tlLs6T8hAh3mu8uXQ7f2Cu2KuPwMt9u7uzaT7dOw421xaJnoX
WKybRrewd53R7JUslBwldCuZ7j8WyRl/5bPRkqupRQLdtepef2fWspFA2dXp
B3THShvgMw1PkcuwntQ9um2JB6P+ROcg5kB27gi62b/+lPotmocUfEZq/eke
qK32nKbloevcbNHedD97mvDuV+EztBmxsOhKt66b7sUp9RdIVUgu9hLdYuel
8yd58lFM9s23F+iew1jWaL35yIEcdcuQ7jjON3ET9i+RMW0zVZXuEq/Tbu47
X6G/gpabynQnTykLzPu9Qkfe3h4+SLdzJ8V+TqMQKVxl27+T7nPqDAS3Z4WI
nHTlDg/dUPa7ZJZQhMQjIq0Z6KYkNzPN9hehtUccLuP9NLRGKMtzoRYjAR2b
tAG6R//L1PubVoxsV7ywFrrL7P2fzFwpQQsSvYXP6U79clXjekcJ2t4oFPSY
7vAzptN/5EtRaLZwaQTdZgqKKn/WSpHFcZ1D9nSrPxUfdrIqQzolN12N6D4g
QAz/3VCGFOdsOFTp3tyc7J2Ofo2OqVjv20l3ekuq6y/RCsT5ade36j4aWkgo
3f8jqgLNH7E1y6Rb0751pGulAk2g4dkwuqeZl4zfdL9B14gqVrp0oy4eYgFU
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
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
            Annotation[{
              Directive[
               Opacity[1.], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]], 
              Line[CompressedData["
1:eJwV1nc8V98bAHB7+yyljIwSSUmI0ufe8yBSJLsIISJFZojka2eUVFZkh4oy
IyMkZCW7UpH1ISUrm9/n99d9vV/nnnvu85znPPeK21w3sGNiYGBwYmZg+P81
xd+G7bCtL342njJaM0BDDd1iOufETNHsqdiR/3ursSZITOwKStYkDf3fhNiy
V1wDbshzNKLv/06pjRZlFfNBz24yNPzfB2Zs727Z30Z+Vtez/+9vhCeb6/2B
SPN3r9f/LfGUU2l1LQTFe8sf/b+vYZ5OS6J30FGzoJFquot7hrIW1KOQ0VTj
jf979arO4Kz9PRT839qfKrrTGAfvLGncRyveoqf+7xPt9/f+649Fj/cfDqyk
m5Zwsm7hykMkMysb/4buKNsN8/m1R8hz346QCrrl5IqXZ6PjkcdBmlY53d1r
Dg//iiaiaMu0H2V032gSkZspTELVQrhmKd2CD3paf6sno67Gtz7FdNdYRthP
96agvHd7vArpttkPzL/sU9F1b4fjL+lmWrv5ccEvDX0/E/XuBd09Q8a7FjTS
UdTLaJ5ndD9tlLs6T8hAh3mu8uXQ7f2Cu2KuPwMt9u7uzaT7dOw421xaJnoX
WKybRrewd53R7JUslBwldCuZ7j8WyRl/5bPRkqupRQLdtepef2fWspFA2dXp
B3THShvgMw1PkcuwntQ9um2JB6P+ROcg5kB27gi62b/+lPotmocUfEZq/eke
qK32nKbloevcbNHedD97mvDuV+EztBmxsOhKt66b7sUp9RdIVUgu9hLdYuel
8yd58lFM9s23F+iew1jWaL35yIEcdcuQ7jjON3ET9i+RMW0zVZXuEq/Tbu47
X6G/gpabynQnTykLzPu9Qkfe3h4+SLdzJ8V+TqMQKVxl27+T7nPqDAS3Z4WI
nHTlDg/dUPa7ZJZQhMQjIq0Z6KYkNzPN9hehtUccLuP9NLRGKMtzoRYjAR2b
tAG6R//L1PubVoxsV7ywFrrL7P2fzFwpQQsSvYXP6U79clXjekcJ2t4oFPSY
7vAzptN/5EtRaLZwaQTdZgqKKn/WSpHFcZ1D9nSrPxUfdrIqQzolN12N6D4g
QAz/3VCGFOdsOFTp3tyc7J2Ofo2OqVjv20l3ekuq6y/RCsT5ade36j4aWkgo
3f8jqgLNH7E1y6Rb0751pGulAk2g4dkwuqeZl4zfdL9B14gqVrp0oy4eYgFU
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
               "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 3.}, {0., 1.}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 3.}, {0., 1.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]], 
          Line[CompressedData["
1:eJwV1nc8V98bAHB7+yyljIwSSUmI0ufe8yBSJLsIISJFZojka2eUVFZkh4oy
IyMkZCW7UpH1ISUrm9/n99d9vV/nnnvu85znPPeK21w3sGNiYGBwYmZg+P81
xd+G7bCtL342njJaM0BDDd1iOufETNHsqdiR/3ursSZITOwKStYkDf3fhNiy
V1wDbshzNKLv/06pjRZlFfNBz24yNPzfB2Zs727Z30Z+Vtez/+9vhCeb6/2B
SPN3r9f/LfGUU2l1LQTFe8sf/b+vYZ5OS6J30FGzoJFquot7hrIW1KOQ0VTj
jf979arO4Kz9PRT839qfKrrTGAfvLGncRyveoqf+7xPt9/f+649Fj/cfDqyk
m5Zwsm7hykMkMysb/4buKNsN8/m1R8hz346QCrrl5IqXZ6PjkcdBmlY53d1r
Dg//iiaiaMu0H2V032gSkZspTELVQrhmKd2CD3paf6sno67Gtz7FdNdYRthP
96agvHd7vArpttkPzL/sU9F1b4fjL+lmWrv5ccEvDX0/E/XuBd09Q8a7FjTS
UdTLaJ5ndD9tlLs6T8hAh3mu8uXQ7f2Cu2KuPwMt9u7uzaT7dOw421xaJnoX
WKybRrewd53R7JUslBwldCuZ7j8WyRl/5bPRkqupRQLdtepef2fWspFA2dXp
B3THShvgMw1PkcuwntQ9um2JB6P+ROcg5kB27gi62b/+lPotmocUfEZq/eke
qK32nKbloevcbNHedD97mvDuV+EztBmxsOhKt66b7sUp9RdIVUgu9hLdYuel
8yd58lFM9s23F+iew1jWaL35yIEcdcuQ7jjON3ET9i+RMW0zVZXuEq/Tbu47
X6G/gpabynQnTykLzPu9Qkfe3h4+SLdzJ8V+TqMQKVxl27+T7nPqDAS3Z4WI
nHTlDg/dUPa7ZJZQhMQjIq0Z6KYkNzPN9hehtUccLuP9NLRGKMtzoRYjAR2b
tAG6R//L1PubVoxsV7ywFrrL7P2fzFwpQQsSvYXP6U79clXjekcJ2t4oFPSY
7vAzptN/5EtRaLZwaQTdZgqKKn/WSpHFcZ1D9nSrPxUfdrIqQzolN12N6D4g
QAz/3VCGFOdsOFTp3tyc7J2Ofo2OqVjv20l3ekuq6y/RCsT5ade36j4aWkgo
3f8jqgLNH7E1y6Rb0751pGulAk2g4dkwuqeZl4zfdL9B14gqVrp0oy4eYgFU
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
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 3.}, {0., 1.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], InsetBox[
    FractionBox[
     RowBox[{
      SuperscriptBox["3", 
       RowBox[{"2", "/", "3"}]], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["x", "3"], 
         RowBox[{"3", " ", "c"}]]}]]}], 
     RowBox[{
      RadicalBox["c", "3"], " ", 
      TemplateBox[{
        FractionBox["1", "3"]},
       "Gamma"]}]], {2.2, 0.6}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox[
      TagBox["x", HoldForm], HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"pdf\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"ME density on [0,\[Infinity]] with E[\\!\\(\\*SuperscriptBox[\\(X\\), \
\\(3\\)]\\)]=c and c=1\"", TraditionalForm],
  PlotRange->{{0., 3.}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.956562679704155*^9, 3.956562693422041*^9}, 
   3.956562869573601*^9},
 CellLabel->"Out[82]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
jPD2GX8FB6AehQ==\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"7f3b542c-4ec5-aa45-b929-e542974a75f8"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.24, 0.6, 0.8], AbsoluteThickness[2], Opacity[1.], 
          LineBox[CompressedData["
1:eJwV1nc8V98bAHB7+yyljIwSSUmI0ufe8yBSJLsIISJFZojka2eUVFZkh4oy
IyMkZCW7UpH1ISUrm9/n99d9vV/nnnvu85znPPeK21w3sGNiYGBwYmZg+P81
xd+G7bCtL342njJaM0BDDd1iOufETNHsqdiR/3ursSZITOwKStYkDf3fhNiy
V1wDbshzNKLv/06pjRZlFfNBz24yNPzfB2Zs727Z30Z+Vtez/+9vhCeb6/2B
SPN3r9f/LfGUU2l1LQTFe8sf/b+vYZ5OS6J30FGzoJFquot7hrIW1KOQ0VTj
jf979arO4Kz9PRT839qfKrrTGAfvLGncRyveoqf+7xPt9/f+649Fj/cfDqyk
m5Zwsm7hykMkMysb/4buKNsN8/m1R8hz346QCrrl5IqXZ6PjkcdBmlY53d1r
Dg//iiaiaMu0H2V032gSkZspTELVQrhmKd2CD3paf6sno67Gtz7FdNdYRthP
96agvHd7vArpttkPzL/sU9F1b4fjL+lmWrv5ccEvDX0/E/XuBd09Q8a7FjTS
UdTLaJ5ndD9tlLs6T8hAh3mu8uXQ7f2Cu2KuPwMt9u7uzaT7dOw421xaJnoX
WKybRrewd53R7JUslBwldCuZ7j8WyRl/5bPRkqupRQLdtepef2fWspFA2dXp
B3THShvgMw1PkcuwntQ9um2JB6P+ROcg5kB27gi62b/+lPotmocUfEZq/eke
qK32nKbloevcbNHedD97mvDuV+EztBmxsOhKt66b7sUp9RdIVUgu9hLdYuel
8yd58lFM9s23F+iew1jWaL35yIEcdcuQ7jjON3ET9i+RMW0zVZXuEq/Tbu47
X6G/gpabynQnTykLzPu9Qkfe3h4+SLdzJ8V+TqMQKVxl27+T7nPqDAS3Z4WI
nHTlDg/dUPa7ZJZQhMQjIq0Z6KYkNzPN9hehtUccLuP9NLRGKMtzoRYjAR2b
tAG6R//L1PubVoxsV7ywFrrL7P2fzFwpQQsSvYXP6U79clXjekcJ2t4oFPSY
7vAzptN/5EtRaLZwaQTdZgqKKn/WSpHFcZ1D9nSrPxUfdrIqQzolN12N6D4g
QAz/3VCGFOdsOFTp3tyc7J2Ofo2OqVjv20l3ekuq6y/RCsT5ade36j4aWkgo
3f8jqgLNH7E1y6Rb0751pGulAk2g4dkwuqeZl4zfdL9B14gqVrp0oy4eYgFU
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
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
            Annotation[{
              Directive[
               Opacity[1.], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]], 
              Line[CompressedData["
1:eJwV1nc8V98bAHB7+yyljIwSSUmI0ufe8yBSJLsIISJFZojka2eUVFZkh4oy
IyMkZCW7UpH1ISUrm9/n99d9vV/nnnvu85znPPeK21w3sGNiYGBwYmZg+P81
xd+G7bCtL342njJaM0BDDd1iOufETNHsqdiR/3ursSZITOwKStYkDf3fhNiy
V1wDbshzNKLv/06pjRZlFfNBz24yNPzfB2Zs727Z30Z+Vtez/+9vhCeb6/2B
SPN3r9f/LfGUU2l1LQTFe8sf/b+vYZ5OS6J30FGzoJFquot7hrIW1KOQ0VTj
jf979arO4Kz9PRT839qfKrrTGAfvLGncRyveoqf+7xPt9/f+649Fj/cfDqyk
m5Zwsm7hykMkMysb/4buKNsN8/m1R8hz346QCrrl5IqXZ6PjkcdBmlY53d1r
Dg//iiaiaMu0H2V032gSkZspTELVQrhmKd2CD3paf6sno67Gtz7FdNdYRthP
96agvHd7vArpttkPzL/sU9F1b4fjL+lmWrv5ccEvDX0/E/XuBd09Q8a7FjTS
UdTLaJ5ndD9tlLs6T8hAh3mu8uXQ7f2Cu2KuPwMt9u7uzaT7dOw421xaJnoX
WKybRrewd53R7JUslBwldCuZ7j8WyRl/5bPRkqupRQLdtepef2fWspFA2dXp
B3THShvgMw1PkcuwntQ9um2JB6P+ROcg5kB27gi62b/+lPotmocUfEZq/eke
qK32nKbloevcbNHedD97mvDuV+EztBmxsOhKt66b7sUp9RdIVUgu9hLdYuel
8yd58lFM9s23F+iew1jWaL35yIEcdcuQ7jjON3ET9i+RMW0zVZXuEq/Tbu47
X6G/gpabynQnTykLzPu9Qkfe3h4+SLdzJ8V+TqMQKVxl27+T7nPqDAS3Z4WI
nHTlDg/dUPa7ZJZQhMQjIq0Z6KYkNzPN9hehtUccLuP9NLRGKMtzoRYjAR2b
tAG6R//L1PubVoxsV7ywFrrL7P2fzFwpQQsSvYXP6U79clXjekcJ2t4oFPSY
7vAzptN/5EtRaLZwaQTdZgqKKn/WSpHFcZ1D9nSrPxUfdrIqQzolN12N6D4g
QAz/3VCGFOdsOFTp3tyc7J2Ofo2OqVjv20l3ekuq6y/RCsT5ade36j4aWkgo
3f8jqgLNH7E1y6Rb0751pGulAk2g4dkwuqeZl4zfdL9B14gqVrp0oy4eYgFU
oo0c90NydMem7W5Oz69ErndTOcl0H8V0Ve6EVaFHtMiPH3tpKJLbdt5voQo5
5D0vzqf7+2efFy7W1cjJ2O9BBN3BN7JFzh+vQfynZpVU6e58uc4kNfMW1c76
ZqT30POJOC15ZWtR2aL7yg26j0s+VAmzrUVeYVkHtem+u5A3f/NTLfrQ6SXy
t5uGFO/32tk8r0M/X7u+lqHb0ttKbXC4DjXvfh291EVDYRd/iZjsrEcLV9p3
19P95SDjwKmQenTgOn7TkO7bLQdOH774DiVLMHlc/kRDuYWvJZ8/eoeW+ZP7
pOjuSlBj3tv2DpGiij9PdNL7hf35qp3HGlCC8tGiS3S3MAfLMvC9RxZWlWqn
P9LzO0XgvnnqPSI8tkYMdO/qSpyYv/0eiVw8XVPSQUMuaS/TJqbfo6/yHQoC
dPNjXykfGxtR3Pqehx/b6PUlcXlGa6MRhdlYHfOh+wr3bGu9QhM6KFynJk53
1We2kLK0JrRzY9LtWiv9vN+QX0q52Yw8ljt//PlAQwUv73y9JtuCDjvEZqc1
0tAUZSrqtHULIgc8tlOiW+rGaXzfwxbUWfwkouU9vX9RudNHVlrQi+veS78b
6Pv7Ieqy2ftWlHvhC7v4O3r/Gbk3e9K8HckbqVgdeUtDRZp/M/bea0eBqT9Z
X9XQ0EyenhFzfTvSYrgwtI9uBxfy6xqpDnRprlFqezW9fjdi/Y7Md6C8io0X
/W/o9c7dGkTW6EQTxHf/GMtoCMd8zQMsO5Fn855gy1IaGnSWOTLj1Yl+CXbx
V5TQ0M6uyPG2Z53I7Yw+OBTT0P0EnVPhpE9oYuqxfsErGgra20HY+voJsd5W
+d73jIZ2n/OfcFr8hC5O/7Oi0F0bLls7SOhCo0TtN9p5NLT+667rG9Uu1FR3
YOx1Dg15Fp3t8czpQr0+B1o9s2jIHn1KnHbrRruad5uEpNAQQ8a/N18ju5Hv
g0r/9GQaSmARHmzJ6kYDVrftKx/TUPOHyyJ5fd3IbnPEmZZIQ/uM1jPsVHqQ
Z9gQl1Qcvf87SL34ztiLJFWVpBXv0lBAq057u2AvIt4J2SETTY9P1u1PlUIv
2qk881g0ioa05qvkHtv1Ip/NUnPGCBrKu2VQeu5DL3pr3e2ZE0JDjrG3ajpj
+tCEY0Czrx+9vy9m/Hib14f6W7VHT/vSUNK5ZoaX9X0o2NDYacdNen0K86lH
L/ShPBHB6lwvGpLJyW06db4f3Vvw5X3hRj/vld2d9aID6GLmkKaCA73/jUmP
lBR8Rkf8VbYr6NPQkOVnjroPnxE5UbX6zlkaMhwIl20f/Yx2Wn9k+naGfv5b
J3zGBL8g3deFZj6naYi5MJvEH/YFuR/3/xWuTs+XnzjudfEr2m40yMF4hIbq
+AQSj5G+ochrLT6q2+nnN7q5RkPmG7I6M6AtyUf/HrF5j+prfkM9wsw27GT6
93Kl75Cj3zd0Sg/p1fDQkMmPh41JtG/oI/XXr01men0/Iy2s1X5HHCcJE82z
E4hLPFjqx9EhZPW8vd25ZQI1U+8f8tcYQjWL+uXMzRMo9PwT5V0GQyhcmlX0
0fsJxBRTfvLC1SE0zNdrml87gVY3p+37U4aQxJ23hsVlE+jXoHHuR6ZhJMgt
2s+XMYHaEqSka9uG0UluwRyhGxMookTx8MXPw8hD+NIA1X0CaXWqHtscG0Yx
khoGZi4TqIHd/BR1axhVVB8QjHCcQFU3Yq6UH/6J+DnzuqssJ1C+0Ureq7if
qGptutZJcwLdJbXuT7caQfyeVz4uUCZQhfKuUl3nEYQFa5YbESfQqOV1tO47
gi7ELGx/xT2BjufzGZ2LH0Gd2yr3m7JMINop81u8HSNIe6013mNxHKkH/f7o
c3wU7Wk/eftj3zhaXiR6GvCPIUGyYiQhbhzZfDV6y9w2jtw+BBtEso0jrsfD
Tq6fx5GvS7LcAOM4KjJzFv4xPo7yX7aFiW2MIeYvYT5vGCfQp+pv6ZnzYyhr
4I2Cq/IEsh57H+4+NIbGe8Vyv9PzlPJkxVClYgw5dk7HVPjQ0FKscsJl+zHk
+j7Y5rrUFBpnFjtrUzaKREY12f4pTCGNdIvFxVejqJWJ85kfTKET1wz7Q56P
or0QPXvHdApxRdoYJqWNos9vHgVkRU4hG6nxs3ERo0j11dMnn2em0IICLeyr
xSgiP27+ol7+C30/2nAqm3EUFbrwGO489RspSDDbxeMjKN336pTcub/onOuT
9ayrw/Q+tq6/MD2LAork3Kd2/kAM3UNQdXMeRRbcTxM5/hVJelz2Ntq/iL7n
1+Y3LPeh0cV4E+7qf8jt4onQFv5udHrM8Vas6zLiE9BVjzrZgXRHY2RERFYR
xtDRLqjfhNpkRnvMJVZRTG3Pj+GjTUjbXdn/8f5VJKx+IaFMrAlpMX3v3Km8
ii6ICwjc+duI1MRkbvDprSJTWoBgd0wjOmL+vpYjcBXNFMhNMPS8R8I9K8bz
Y6uozUSH9Y9tA5p6ZxPQnL+G5A2NR8SL6pDo/QHHuyVrKFg7MvXt4zpkZKlr
bFS5hrItXNqcQ+pQzfKx/UPNa2jfh5IgRtM6FHuQ3LM0soas/ngULTPUoePx
b6WkBNeRRX8CQc6oFkU5Cn8MCV1HBb8GaUnEGiRL7tulfnEDVaV4Xrh7sgKN
R48HPrLbQEZu/RYLeytQCtfSxMTVDfQdzb70ZqlAPCw7i6K8N1DH0wrZwbpy
NPXPVLPv/gZaM3Da4sXLUfbgN+crDRvI4lbjhx3U10g4d+ztPelNZN9Z5fJQ
txT1SPyT+HloE9UPPdhZLleKItPZIhSVNtGZ7f6HViilaDVJyuiz2ia6OPsk
tLu/BA1EX6HtNt+k59l5YMKmBD1w/00qu7uJTKQsMkL9ixEXWrQenN9EMZpW
O4xaC5G36j6OstVNpOHtXDlcUIjG1S8U3GPcQmkHjlrFxBaieq26VTXiFvqh
3u6kZ1aIbhpEP8jbv4UkDGu+m/56hX7Z7X1/w3oLMT0rHArie4Xaooz3kT9u
IfFSVkufpRdI5V54x1TvFvp7+b70w8YXKPd+pUfDIN2HFjKnH71AwXHidV5T
Wwj2cvGaHHmBRDr/HZhhYgChrHY/Nq/nqO9z/XtjEQaYPJuQXsn6DJ38bba0
25gBttWfGjU/m4OebAvqvn2eAfiOqt1Ml8xBC8efvxy8wAD6y2qZwptPUVrE
mn2cDQNspQ1yl+U/RatSyQOcLgwQkvbhrQvxKXph863ibwQDfAw6/GR4MAuR
Bi761dQygLtMVGnkkwx0eSvsvFADA3Rl3xI28MtAVZKvFL2bGOCEA2PvKbMM
dMWT4ffhDgbIdI6LbuPPQPWUdIvsrwwQe3nAQjA2HXmc+YlH/WMAld8+poX3
09BAvS2j2QFGqAoNdFKwT0F/Vb8I3jrECE9PcPcpy6cg9rqzimnyjOD2jBoT
vpGMlN6q2I8fZQSrAN0vvI+S0cNKUrubBiPszxmZTG16jM6WVCVEWjKCYdQ1
kUyVJNSYvU2uOoYRXh0TGD5kEo++S0ScGnrACCHjnwMU9sejxcwtG+Z4RihY
6/e/uRmHJDKmHp1KYYTxnhs+n3LiUOCT2rXePEbgzB7OebzxCOHx15r+1DMC
W34o36XSh6g0vMFSbJERrrx9aNhtGItyT7fuDFtmBFV3prmiA7Eoiaer6/ca
I/hf4vHsZ41FATE/NCuZmECKatL2u/w+0klYlTUhMYHjeBfS3H0f/cyR24qU
YQIlPKnGjDEGEZqSU5esmeB2+Lq8/7dIxHgn09TSjgkyktJZZFIj0cLpZ3zv
HZjgwr37PjrWkehzx+uw2OtMsP/Fq7qp8QiU1dd1/eAtJlDfXU0KWrqDVMY5
4FICEwRZ/aDGHQxHl1k9hzo6mOCPSUz4Ki0YCYp+6F/7xATVZ0P8T1QGo46j
uz7u62WCXx8mJEaig5HStffVgV+ZYG9bSqqwYjBi697+WInGBB3HdPa7Bweh
7LQy4yeMzHBp7/FqTcVAdP4N15lWFmaYe83yLZM7EPH0WJ5YZmeGwOY8bd2R
/5AHO7uCAYEZmGbvnr7z4D90wvkciU2IGaLfDZ2LXApAo8eXW5wUmeGdxGjY
m6TbKMFYpz5JmRlMj8gUlhjcRjrX0yqaVJjBoqLN9zj3bVSSoZUrrsoM5w6N
3v91yx8FcyaG9J5hhvikIeWaK7eQRP8xwOyZgQVXbXQ380WX3HxLeZKYYR9j
d9CtJC+kJP+9VDqFGUpbhbLvXfJCXHNQppnGDMUNBbakg17olSvb64CnzODn
+XfGrO4GWne5X75QxAxmKaJvGGY8Udz1nMrBVmZo0NIqXbTwQFcOcVWtdDDD
8wsUvtSDHog6c62Kv4sZOq8qH3ix4Y5GnOWr9QaYYdLHeu7PE3ck51xd0zDK
DJ5M8tks427ow7XuuhcbzHBBS6RvOMQVJR9Qqv/AwAL+DJUzPhdckct0Qv04
MwucizHLvHrYFfFfs3wnxsUCrn+iHE2/uyCbq5MND/lZIJ31e+oZqgtav7LV
5HeIBd7sdkjeR3JGh+xlOnSsWSDSmW0PVnYFfb8iej3flgUGs54eEXW5gqKu
8ZEIDiywnJyUmrf/Cpp0XdP/6MwCDu0kxaJ0B5Tp19qr78cCjb+ix53i7dGO
2KvfTOJZ4L1vNLtbmh1qfHjR/3US/f3eCbsiWzvkEW8ouvMJC1AnE9fT9tmh
T8nHrT9nscAtxvoCoWJbFJnDPXahiAWWtHUtOzouoa2q59NW7Sxw4Krm/F4x
G1TwNjW6rpMF6kSmH+VNWyPz+geyu3tYQGjiCdvLCmtU0eTrMvKFBQ4+/7au
YmyN3Lu0F+xoLND/XVn7WKwVmpj4tebIzAoCezT1WzUs0UfKAW7PY6zgTghd
osiZItzJafIxlRV8m0qIMVPnUUFTQVM9YoUoTdH88uzz6K7f4WCSJitkH/z7
gU3kPNIZV9p4bsAKu3yZ9a/zn0MtFaozP6+ywvLuRh+01xipbAtq57xOf56L
ldPHSSP0zLnhuZwbKzhlp6DFAiN0Z89JB39vVnjqkn95Q8UIaUXrDAuEsML1
uZSIQVND9N7qXLfeE1YIK3Z5865QHylWJhR6pbMC5aKX3K7b+ihr+5d7T7JY
QfHMt10rOvoouMVcZ/oZK5j/V/dRYUoPqSnavA97zQptS1mCj/broVp2p9c1
nayQMyCYJRF8BlUWBD4+wMwGPyySzJzvaCE2HWPBeDY2uO5EFLynooX0J6US
GbnYIFF7+cKj6ZNoYk97XB+JDZhnhVVPGZ5EfIk7YgNE2CCCQ+YRUUYTXQ16
Ed5zjA0uXD61Q5bpBCoTu82OMDYYmhq1e1Krjhhr9EPzgA0qD3+s/3RbHcUv
/wvyP8kGRkJhz3wY1NE7J9Xb+4zZQEbC+3g8lxoSOt/n6efCBhy/ZRovAqDL
i7kL4+5s8HDSGQlyASqM9XXX92KD3Tq/g+dzETrZLuYq6c8GavOyU6p9OHJX
u3qtM5INbueq5tYiDLUeYLgkkcMG5rf0yi9pqyD+lq7hu8/YIIjQHzQ5ewxZ
22dbreSzgWJT7bmQxGNoKf20ZUcJG7g7/t05/+so2rPjkal3PRt0jw9GGaUo
I1/G/Xpt39hgnXfqSNGhI2j8BPeA5DAb/FRlJD+cUER64dMX/xtlg1/hMvkm
aYpIgvjyutIvNrBtn77ksU0RtQkr3ktbZgM99qSXHWwKSOQo3uHBxw6PM3Uj
l8mHUbivqMlHfnb4JvYf3t4nh+ZqGL5LC7LDBV9hOctkOdSk8e73dzF2eOQn
ce2FtBxyMdTiPSXLDl5Pnjn/lyiL6p0NdHadYgdJqb/yApdl0IEihR4vHXbQ
Z2I+5cAqg+IWt5l3nWWHt5Ot+rPZ+9FVv/6rYSbsYHS+i5YxJY22RZhHzl5i
B9Yoy3HxwH3ocvbllvf+7NB7rH8ucXwv6qSdNBALZAeifP/sdPxepHJA+svN
EHZwL217dOL0XkQs/jV5KIodbsiMpC4WSqDyWhfOpER2KPf8AtzRexDX4E0t
5xJ28GHLVQ68Lo6UvPJ4771mB3HB3kesiuLImjLQ9fINO7zerh56YkUMlWsd
sZitZYeKkr9vp0PE0OXSGVePdnaYSnc0Njsriuru2j6+OU7Px+ju4Mv8wmha
+oHV40l2YGTl69gsEUI739ftrZpmBz3Do7SPRkLIeU3k1cYcO6iQDHQICYJI
2OFzQ8AWO3xxfEJMOiBA/x/U/RO6kwOs3o/mrkfwo6xBv+IcIQ7IO/r6X/hx
fvTR67l3swgHVOw9ukPg93YkWcDBzLWXA/YJhFccNdyOugXf7Yg+zAFjc6sZ
u2W2IdkFZdUHpzmgTC/Qew87BZndu8xWcoYDjINWXWMbyShk/6PWHj0OYLqz
aT0QSkaDVnPG/Oc4QDh8c+Y7JxlFtL9wTLzEATvL1ztiBEho7Kn4w1Q/DpB9
Lj759Q0Pmg4eXmEOoM8X8tkWdYoHzdmkX3QI4oDNbQu+g5+5EYOouMzhCA5w
nZoS19riQoLxYvX18RxwJCzXsNScE+mFif4dK+KAtlN/6q9bsKFzdj+MT5dx
AO9G5GQJMxuyVE+tLKjggJ77i5unnrOiq1siYV61HFDX9uW3/iYLCvUSEeHs
4IDzS7TnFsXMqMp+l86BSQ7w1hykvjZmRO80vhXGTHOAqeuo9SqBEbXsSdmx
OMMBV7l/WGl/YED9P4RHqv9xgIrKEzEOVQY0d0745lkWTrhJuKZO9NnEV44M
/ihm5wRJNT/v3LUNnGFbssZObk4w2/vijkTABs7bKUQeJnPCyw/h/s/uruP7
tIRy3UQ54fpsG59y3Sp+SPIrb/9uTpgqy/h7yGAVV2J57H5ckhMOJphoD4yu
4Oq1gojlICfsG5jQEyWu4JZHBfseqXDC9hGb+uEbS/jDfQIsFcac0D3aZnr2
7gJubimZM3KeE4R9Vr/oYAu4xEOF0wRzTujwqOjx/D2Pl2ydiblkwwkZt2IV
VfTn8Z6+QGHCdU5Y4JR1FpWcw/lCphUvhXOCH9ncQIDpL/7lzUp/dCQnOG1v
MiQGz+AZf9l8y+9yQu3i0sd21hlc3ly8jvcRJwhIlCz1Ev7gBgomZ8rTOUGb
0Z3dSmkajx1+a8dbyQlHO72YWPtouNmOdo6jNZwQzZrUsd2Vhu8+8+W5TR39
flPV6FxeGl5UvjD7uokTtIaifHHtCbzrnrS/TQ8nkKSO7UzqH8OT3iuJR/dz
wvxLbEnKfwy3WVNveP2FE760S5cTJMfwucuWXLzDnCC/YR7b7TOKk/EHca9/
cwLBgGerTG4EH3BPO/bzLz2evtZPYcM/8bS8/EGeBU5QKh4NiHrwE5fb3rzb
ZpWe/wM6JLG1YVxver2Ah50Lyl7qWK70D+ExSZebrMW4QP++0MKXO99wrxuB
7n57uMD/sHvJHdI33NLgiWi8JBeUOzc/JCQO4ge4+rzaDnDBGZWvcgEvv+If
fDT2KR/jgjr3LWbd2c/4K2PrHn0qF3x5HW2wHPIZTzh8K+Aa4gJ+F7ZfGsKf
8cuTJQPpGlzw86rSruIzAziTqcQdHgMuMKBdGZR/14dPKsIRKWMusMz0R0a2
fXgnyXxY9TwXvPWQVfjF1oenNj845mXJBVOa9aa2er049Sjz1LAjF1hZfPea
ne/GPXf8PP06iAvMzA42ifh8ws3nN/59CuUC8w5reZVDn/ATHwUyp+9wgV9t
n8qt8U6cEqa/Jh7DBTv5Zr45nO/EC/7VPo9K5oJQLb67dbEd+KOuwXM5qVyQ
WTK2LZTUgfsVLDPXZ3BB63/5b87FtOPal+XMl3K5IDLd2oU5rg2n9aby2JTS
45Hobcgrb8E/FlaW+5VzwcAu3VpmzRa8LLrfNr6SC/LOKOcc6v2AB2sQq9vq
6PuBNoKHl5tx8VJ/J+UOLkgXEpv7a9SEmz206OCZ4ALOyq1GSbMGXLiYS+jq
FBeIhY2E7Fx9h//49Nr+w28uiJUZVSl//A63JVIYQxe44BlDl8nYSD3uHNGo
sMXIDRySKltKYXW4XJ57gAUrN6zQrPQGFOrw+Sax9koObvhr+3BudrgW92b1
vexN5IbcbUPqnmq1eGDAocRZYW64VW1wWnJfDX4idXDsrBg3/Al3fZkUX42z
19yRL9jDDf8R9TfTOKvxqLWRVsf99Pk9MleVFyvxuBsJmyPK3OB9MCjQerIC
z7vGaNtnwA3NBYhxhFqGX4sseKVowg3G914I5HSW4rLPLmzEmnKDM1GAYHW5
FC+aKI07a8UNoRqmt+7Gl+BVNo4fmp24YaGLN+UfsRj3/28Hv5QrN/TpZdb5
FBXhqmkNNiEe9Pe5f4+/0KQIb/wmsq7qyw0nhg7ZiWQV4p3nu2Urw7nBYF9H
+z6DV3isV4CvQBQ3uN4X7viP8RVuHHew2eseN0Sknrd7YfsS/9IdZq0Yxw1M
ef5t+XIF+Kgu9WF+JjdI7nstwTP1HF8+kb2SWsMN7TsiRur6c3C/ytSghjpu
CJtvovA75OAM8km8kw3cUHmkON989SnOLnpPXL6VG2J2tFmkSTzF+Ve8TzX0
c4PHiQCFPfey8KTr7t20L9yQ/KrKWkY2C9817mTB+51uv39pEx2ZuES3javJ
KDfsiLO1v7g9E1fI10mk/eUG99+zU2Gl6XjZnpN7eBe4gSu94ulV63RcJUk1
//ASNyi3v/VpI6TjamFKdTc36Pk3Efr1yykN17MWm+Th4oFe5yv2Uz5PcOft
C0cP7+GBgnly9hH5JHwu8k+9sSQPcDmFU3hLEnFPpkmdm9I88PXCcv6+o4m4
38w3q3eHeCBptoCZ9WQCHvmhKdyYygNP4qsZT/rH4QSop9xEPFDxV/y+AjkO
jy2rSn6ixgP/rjR7Czx9hCdlFr6a0OKB0m3DJQW9D/HcW48HfIx5QDGnwGqb
9gP8wMIjmyfneeCGWpfs0HQs/soxZrr+Ag/8fX4j91JMLP76XAgDjw0PXJM5
dsJ98D7eePj6vifOPNBjdjJ0IiwGHxlT864P4wF/8pqSgk4UrpbakbE/kgfI
BI033iWReNp5s/bYuzwwGJ32slk0Erdsdd196REPHIxq7dTZuoN/eZXWxpzJ
Ayxhea0mQ2H4MccDS1ef8oAw7XuH5cUwPGFPuXhPHn3+05I3jMOhuEncxxtZ
r3jgzrdRpbFfIXiX76aYRg0PDFM7WVtEgvHDRyK08+t4gHne9KduYRAe82f7
je3vecCz5okJQTMI17U+2DrWygP868zzpBuBeIumuWfoZ/p854SstT8BeD35
zYemBR5Y+VDKd8PLDxdv1Vg4tMwD3/33ep764osHBH8SSVjjgZy0oq/m4Ivj
SzR3ByZeyE7YsmDiv4m/Gdwhwknihbx+x+x7Y164QFymlisfL1xb6bPNtfLC
vc8ecv/MzwuuKX8lQr/fwJXqNZvzdvFC2muegPM/PfGiHE+30zK8cF/3+ZHv
HB442ZoxpUiWF1o8G9IyEtxxF8HoJkF5XpjHNu3r97vjstFZwr+O8oLt/JXB
EWM3/Jlbd2OkJi+QfLUarzS64BnYYaF2a16wDkr+I0a4htfrcgWt2fKC/tkp
Iwmfq/jPiyNT0g68ECa1PU90whHfE/joTagzL5Qic4+G1it4VuOKKfjywq8B
d2/VMnu8ob+rztmfF/DdX0/dUrbHR2nPpVP+44WTuXd1T1RexiW4LVdWwnih
Vj9+v1qLHZ59tj6h+CEv3P3JpJPPYos3Wj1m+BnPCx9Eag7NJlzCx109HEiP
ecHI/JOLzaFLuORDyaNO6bzQ+PfyrgwbG/zpQES/ZAEvsK3evesxbIXnWhvy
JzXxQhB7SxTtujne7HbAv7mFF/ZfuVHQ1XMBpwWxjv9r54VAhv8Cp6gX8H1P
X5ca9vCCy63PmZf4zfC8KSFj3mFeuCHkONMxfQ5vWVuoOj7KCz+RV4rXlXP4
FE+HhOMEPf/WOXgfzQTffyhgofE3L2xQMwr9Z4zxZ+6jDwJW6fHmDaxzCxnh
LcHVawUbvJC5dJNt7rkhPvUo7tI3BgIoeQsflEKGuEy5loIKOwFqg1Mnz14z
wF+sv+ia5yOA8MSxXReH9PD8EE+y/UECMKsI1Ibo6ODTVIvAEDkCLP22uyRd
qE0/nyfmMxUIkD1S/J1JQBt/ZrOtd+gYAdy9BL34507huag4wUyTALpJLcNc
zSdx2r8kTp9TBFAw//Um+8RJXKog8Ga8DgGS5djM1t9p4k+FDcx7DAiQMiug
lt2igWet/BXVvUgARZ4Hnc7/1PHRVwMx12wI8CKEwHg9TB3f41DLGGlHgCqo
NqoXVMcz+u6NNF0lgErTfxXyWmp4arFsjqo3ARbHOq6vVAGe5HRN9sh9Apx2
uCb6gJOKf5EwSjV8SIAy7q3dhVeP4wKDx0lu8QSIlyXwSn9SwRNOc88VpBBA
Jt5meCj7GP5I6lnpvmcEcBxrcn/soYz3fL8veTKfACf39O4snFHCt8X5xNu9
IsDlu7YtKU5KeCzLKZ+MMgKk1Rb11boewWOGJ6jC7wjwo+W8WUqiAt6Z8DFf
pZEAqwQN9s/SCjhR77WI6QcCBP7yFverksfv1oQyxH2kx9s7QHtPO4xHPd7b
QBwkAOGHWinFXA5vM+A9IvuDANy+tp/s1g/h3FyL2To/CdDlofK97MQhPMK7
IewOjQBezJGxisMH8TDjS9rMiwQ4sZDcZ3pSBs84O2hut0yAb8HBgnnJ+/Gq
U8bOTWsE4E+MucnwTxqfw07ej2Qigp7O1B7Hkn24uaRMPx+JCPzdCtqvLSRx
L7EsmicfEVjyDUY/de7FYwV3rfbzE+F8FWug5sm9eBOBuCt5FxF2ny6MmsEk
cPmlORsJGSK4F2mOK+rtxs/MXvUIlSWCkLFkMGlQHHf4NRpCO0wE44T7V0sc
xfGUH325L44SIfXsjad8MWI4R/ObP4qaRLD9tt1zfm4XvqdegSH+FBE88px6
qhV24XjVC/KKDhE0FGwl9/oI4+6vnihWGxIhkM3fyIIshH9PCLypYU0E2WcH
HBI8duIrsWuRObZESD837uLYvwPfFu2RwulAj3dkJx8B34Gf+u9ybbszEb42
M2848/PjJVdOs5n4EeGiu1v2kVk+/OOldzvKbxMhoiFkQdaFD5+yoEoLBhGh
qi3SWm+OgosayOp8v0MEi/KF/LdbZDxChRJ7OZ4I/waO3DLCSHi2YmRmcxIR
ODmIW6I5RLxWlqV0/xMiWMmY7W0fIOCLu//1/8kigqY7R7K2Ni9uxf1ll1cR
PZ7CbXbRV7jwm6yGhz6XEoFjn5aFbRUn/mirFY5XEIEn2o09jI8Tb5mvvrT1
lgiRmt8yNDvY8SOD6Xlh7USQ2jqQMufGipNkHZZfdhLBMio/680fFnz6tuzJ
gW4izHzzv5zgxIJn7akc3feFCMmyhuq6Hsz4tqs9oi3jROirvFPTnMmI/61K
cp6bJMLA2XwJayVGvI1gXS34mwj35QqUIlsZ8OCi32ZX54mQIxy9WLi6ha36
MWuzMZCAV63MLml1HaNlX3ZLYiQBRds0+r3GOtbX8SFRlpkEm9JLFUqP1rAi
sRiaCRsJAnyM88NgFXNsEA7N4aHfn7a5capxCTv/+3b+cQIJvGjF2uyHlzBN
/pGej0QSkE8TbfVT/2G7HfL2LFNIIBb0r/lo6CL2mVupTkuABHsVGlOlfOex
RsVE2qAgCVJXwncJMcxjJRbrRFdhEhh77HrIED6Hxbyst0wUpd/PY7R4IW0W
0zI8uz65lwQRSN2CfWQGU/Ir2uMvRYKgmwuBl3fSKzx7uzZFmgTbPx4XzzH4
gzEsfU1UOUCCojXGifO901h5koNypDwJBi7bWXuRprCn71otRRVJ0K+3Xbfv
yiT2cFo2tPgIPZ4rY8qoiYa54Is9X4+SQInY7dsRPYHt+/mf2wFEAmllYyWL
k2MYP/dYYi2QoH5b8s3AmlGMRVGrzkiNBPm/tQw3j45iQyEE0i0NEhxL7nLP
Ux7BEqQf57drkyDMSPZuiekwtjCvmR10hgSfB3pYZYeGsLM1c8nHzpIATXcr
/LwyhLEZno7KNiDBg8JoKR3eH5in34rjLVMSyJYdZPjU+BXr1My2UbhAgsSB
5jYG5q/YAbK+2aQ5CdQrnxc7nfiCjWbnnjK2oo8bpNz36BvADD6e23fQngQt
itr/PVHowwoSmcVGHEhQ+z7n1c64XozT9uWOREcSvDHXZP603oPVLrOxszqT
gG9EyCCyrxs7tLtsbNCDBCYfE24dLf+ERUxbf4u9QQLtM53Or459wsbLeHu1
vEnwJGVbYVxNJ/ZE266hxJcEOTlxL7OyPmI8ntsyowJJsEPV8sBJvA1zQLVJ
asEkSCIkGui6t2LvOK/FLoeQ4P5cV9+P/Bbs5pN3/9neIYFu5KdnPAofsMkm
NytqDAnsmr8sv/BpxE7Eipyfu0+vN+83XqL977E085azuQ9IYOugc4Pz2Hvs
/Kw42hZPgn/1AtUtnA1Yo+CnXdMpJAg8UcHw7WsdtnvMb3tGKgl2H+bSHDKt
w2693Md7Pp2+fq0np9/XWkzxRMD6uyx6vpvt4490vcUynA59ffycBP4alFOf
TKqwTeWvXfr5JFjQDuPDwioxU6awFvaX9P2Ns7vrUv0GI8V/r3AvIsGqalXM
PZUK7HZtdIJ2BX29+xdo0e5l2NS32ocrb0jQxeGxjfNTKWayNh+TU0UCGkeV
w4Z8KXZAyewOcy0JqixH+/uZS7CB55I3KxtJsNX/SVumrxBT/2B640ozCf4K
OtqoGhViBeNRbjtaSJClHdP6t/cVFiI+7+jeTgL2M6Gcbk0vMfn4txdkekjw
4cPrmVqdF1hKydy5z730/WCYv3fh1nOMo2uvUVg/Cf5LCL9RU/wM+8ETpTPy
hQQCXqXPsMN5WFTgeezxMAlcMu/qbjk+xZZSI4+dGiFBgUA6c9H7bMymuubI
0igJCPsHdnHszcaOLUvIGtJIMP89pXHXbCY27jQrwj1Dj79IMTmhMh3Tj5QQ
qvhLP98nsGHOo+lYVe65HfZz9HhfWsjJl6dhD0aqie8WSVBae0EjIDQVA9MI
Bt91Ehxm9UlXZU7Gnt+oXt+3SYLFl9tCpOUfY/wP/y73bZFAZjI4jsk+Cfvd
YTIrz0wGRWFfqeHhBCzpxJ6fU5xk4DPPH1zbEYex2ph8T+Amw48TETUkt0eY
y+07XzR5ycCgl2Y22vkQO/lmpiuDRIYjzhnXVZMfYAuHqt6Z7SDDuGLPs/OX
72MXz8y85RAgw00XQY2fP2OwFsfdVWWCZGCZ17imeCkGS8sOL6GIkOGr3y7p
6G93sTNCxtktEmSYKqheemkRiSWMytZekCTDIFf9BY/HEdhoPsfXaSkydDOc
PePz/Q7mB1UkogwZqkn/JMvdw7EXdnv8DA+TQVwuSc+mPwRblt2IG5Unw/B2
eYFbx0OwE8t9hZ6KZJDsO3axNzMY+xoRMRGvTIY4hmHhtoAgjOvVrMEgRobb
g6ShLw7/YSY+rU5OiAwfqqtyRn8FYBlq2eGbQIbeKL0npm4B2LHe8zViJ8jw
TTu0XY9yG3NYfSttd5oMBK89AiOvfbGSd4kn/mmT4V5xIMenmZsYQ7T7xbAz
9Hy81j0HB29iCaJSj/L0yECmFk/wlHtjTSfuMvwxIcNJkWeu3pw3MArBQej2
eTLM37V7G3zFE7PsV1UimZFBYe+W6Wa7B/bvyuJVeQsybL1SWHub6Y5J3jPv
v3GJDG5NOy+a3HbF3M4rzbHbkUFq93h62pYLViNO4k28TAaxMcZ17yAXzLjk
nVrlFTJUpjk9Hdl/HQv+vL9g6zoZLlTcsp19exXrzGD5EONKhgCBpm0nFxwx
4WvfR8TdyaAbKv6fnqwjVrx5X+DEDTJMaO5TGipywH7uWQkO9yNDWmyVx8CK
HSb7uytVwJ8MiUeX0vPO2WE3y168eXabDI9u7aVxv7HFKKes/rYFkmG7eNhB
lqhLmKpz0wXyHTKcaHng5Wltja0OTGo2RJCBc7TxQWOvFVaiziPvFUWGHYOr
Pla6VpikgD7Ht3tk8EmgZA3EW2JDQe7z9+6T4TBlaAZPt8AS/zz6rvaADDr7
AoOPF5ljPA1fSnLjyODfw8dMmjLDGmU3Ui8kkGFSUsnam2SG3U4UjSQkkaEo
eudAPGaKzTnbWnuk0Me7kv1ln5/DBgT+8EIWGV7ci7ro3GGExQaTVuayybDS
8mpLea8Rpj0jP5qdQ4YBvLRS7T9DrKbB6w33c/p4+ftcHy0DzPtQUnbNC3r9
vTk7eq5YHzucVBXjWkCGrGocfd2tj2VdZ7TvL6TvLxk1qhL1MMsvewwiislA
CjmS+XbHWWyHhiaGldLPp9ork8MCuliEYCRfZjkZ5tQmyK8VdDCX99tqnd+S
4f4dz7XqWi1sv5zyc/E6Mmh4HOTgXjyJjSSZxvXUk6FvwADeHjqJmbg8uabS
SIaHfv9cHr3WwEhfa8/9bqLXL5FX9RyLBvZBY0Qt7QMZehRSet+anMCoQvsE
2NrJIJSw6tzDrY79CznNUtFBBpGR84YyzmrYy7/XZq52kmHtQFyOf68qtrux
8P2nbvr7YUM7/IsA43A97pbyhQzGlFsLheoYVv/VwkJvkAxBPKR5Nj0q5qsZ
oMX8nQx2xEPFwrbHsT9C70WuDJPBUTs3+lHGMSw3dIJTeIQMDb7ErsC2o5j1
LOdixygZks+pkDQ2lLGeRt1WRRoZFoPi1667KWF3D7uWTUySIcVhK9Cl7Ah2
MvlBetIv+vr7G1M9GY5gb1wHvBhmyBAuvaTbka2ApQrbSLQt0tc7W3e9Q+4w
pqIgI2uzRIYmz19sN/LksJ5TC8rLy2Qo/BzsICcph3F4hWpLrJOh7menR5OJ
LJYRfdb4zQYZDpaY/FC3P4hRs3Ze1NsiQ7xa1edV/wOYy6dnbn5MFGCR3lOI
3u3HuGjufhQWCqiou3HZzUhjWZvU0FxWCjjeWOydF5fGBmQ+JvZwUMBcVooW
lSiFQeh87QEiBf7TfXCuuF0C+5Jc1VJPosAFuHBKbJ8E5lEc0nOeQoHq7Una
8WF7sNyhHbTg7RTI3JQgchvvxtSWhmYFd1DAQUPYtKZeHBvkfbb2aicFcgSm
S2iK4hj5OJX4TYgC656YjJCkGPZCn1XAfRcFdt3p2nx3ShTTdOjYzSlKAV2f
9YcqZ0Wwm4+slI7spoBqwrPhWRdh7OdMsEX0PgocMgz6YMQpgPmx6drv2U+B
th/+j2loJ8a/a4drhQwFokW3LF767cBOn84LHpOlgHThKMtODn5s1Mrtrq8c
Bf7EQISlyXbM3+t4AlmeAnKmZQfFn23DirLan2NHKCCszHTbzZoP06mMK+1W
os9n/y70qoGCjX+6+PbKUQqEcZdlNB2gYIJbs12PjlPgt8v1PTNcZCzIlH/1
tyoFjvfWdd39x4uVh+byCmpQQNJ6/lEPPw82XawirqlFgZdfvrcGGXFhYsNt
im7aFKAJhTsO5HNgRoSLWk90KZDHVjm3T5wdCz8+e6FFnwLhk3ZToy9YsSqH
oOv/jCiAX6u+9uAsCybxLidO9wIF5Ptjzxv0MGLecVrFjpYUcJ5mbjKtYMBa
r0x+DLWmQMxM2vn9F7eoIvQ/xgxbCuhPSt9Zv7pBdSPJcL61p48/r5eixq9R
34+07v3qSAFRCQ7izh8r1J2vr6ktOVEg45D9yS+qy9S3FgW+hzwo8Ni+wLtc
f5FKOXw2QduLAjMfvb/9XJunXmb5W2J/kwLMZrff8FbOUSv6Yz4F3aIAOUvw
4mL0LJXn+eE/qQEUaH3/8uAV97/UYn13qYFQCsR7BhjuGJmmmi2XWJGiKbBV
688aaTZJZUz9l6j1gF7P2/cKv8LHqbkaR7sDEimgGeS5VRI4QtWd9uGpSKWA
p21euLrQMHUxtlJjNpsC/lpx/C/Wv1GTj234S7+gwPKzMNit+YWqNoSXWxfR
61H6nKU6cz91MjRgNrGcApaeAgGYZA815mD9/q4aCrjit85/y/hE/WMqmX3/
PQXsxcZe3wzqoGqHRojqt1GgLD1HvM+mhWpzf88mQwcFeHPk4uxcP1BvJlcN
vvpIr9+AGuQU3kzNLfqTSOqmQMDiu8vVHY1Uth8G2zo/U2BPQlRCV8k7aq2y
EOfZCQr8uyX5aPulaqpvzMhG+wIFbhloHT08VEqNfew3eOsfBZrEnfaXbCul
Pnu6vfLgMn2904olPnol1IGqk97RaxRIqS180DJYRFWafD6nw8QH3ToRvn9U
X1H/qnpMtBL5IG3zufKYaC718jzLpw/7+cAa2+LpcUqiWj470WF+gA+uE3f1
CAQlUk2sg1tnDvKBsk1F3cW0BKrmR+bG7Yf5gMdjSn5wNo4q+Zyp0lqZD9RU
g85mTD6gjtkwZK+o84E2N1Zu+i+aatu15i1twQcPzjLYZ/wMoNoUzonduccH
7wJ0rf347KjXAg3XT9/ng6qN/Ls+KrZUT8OSfp4HfPCfcPodHsdL1PBFz7sx
cXwgc7DNJH3YmlpwbGUtPoX+vPHhYpqhJXWlbqvv6XM+qB57zpHfZEyN6eKJ
bmjig5Kzi1n65zSpSZlODqEf+GDMkmIrf02DmunRoa7Vygfbv43bxEWcoJbx
x6y2dvBBHGevvsNPNeqgGZ9Ddy8fsJAn2ZknEVVqRED95wgfiFxKk97+Vokq
V3JTJGuMD+b7nOa2tx+hqoR8XbGb4IOlT6OHN0YVqTpSKa8mp/gAPS0V/CWn
QHW7KiYyO8sH0FwiQjkkR/Wj/rdSNM8HZ7Pzan4xH6KG8P7s8VjkgwmGbRdn
Xx+kJrzMjFxe5oMzJNUoZy0ZakYAi/2bVT7Y6W9j1LlnP/W5vp2a3zofjHPs
Qie4pakluxt34Zt8IMvk/11nU4paMy+5srXFB0Ezuxtd1yWp/wNqbix5
               "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 3.}, {0., 1.}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 3.}, {0., 1.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]], 
          Line[CompressedData["
1:eJwV1nc8V98bAHB7+yyljIwSSUmI0ufe8yBSJLsIISJFZojka2eUVFZkh4oy
IyMkZCW7UpH1ISUrm9/n99d9vV/nnnvu85znPPeK21w3sGNiYGBwYmZg+P81
xd+G7bCtL342njJaM0BDDd1iOufETNHsqdiR/3ursSZITOwKStYkDf3fhNiy
V1wDbshzNKLv/06pjRZlFfNBz24yNPzfB2Zs727Z30Z+Vtez/+9vhCeb6/2B
SPN3r9f/LfGUU2l1LQTFe8sf/b+vYZ5OS6J30FGzoJFquot7hrIW1KOQ0VTj
jf979arO4Kz9PRT839qfKrrTGAfvLGncRyveoqf+7xPt9/f+649Fj/cfDqyk
m5Zwsm7hykMkMysb/4buKNsN8/m1R8hz346QCrrl5IqXZ6PjkcdBmlY53d1r
Dg//iiaiaMu0H2V032gSkZspTELVQrhmKd2CD3paf6sno67Gtz7FdNdYRthP
96agvHd7vArpttkPzL/sU9F1b4fjL+lmWrv5ccEvDX0/E/XuBd09Q8a7FjTS
UdTLaJ5ndD9tlLs6T8hAh3mu8uXQ7f2Cu2KuPwMt9u7uzaT7dOw421xaJnoX
WKybRrewd53R7JUslBwldCuZ7j8WyRl/5bPRkqupRQLdtepef2fWspFA2dXp
B3THShvgMw1PkcuwntQ9um2JB6P+ROcg5kB27gi62b/+lPotmocUfEZq/eke
qK32nKbloevcbNHedD97mvDuV+EztBmxsOhKt66b7sUp9RdIVUgu9hLdYuel
8yd58lFM9s23F+iew1jWaL35yIEcdcuQ7jjON3ET9i+RMW0zVZXuEq/Tbu47
X6G/gpabynQnTykLzPu9Qkfe3h4+SLdzJ8V+TqMQKVxl27+T7nPqDAS3Z4WI
nHTlDg/dUPa7ZJZQhMQjIq0Z6KYkNzPN9hehtUccLuP9NLRGKMtzoRYjAR2b
tAG6R//L1PubVoxsV7ywFrrL7P2fzFwpQQsSvYXP6U79clXjekcJ2t4oFPSY
7vAzptN/5EtRaLZwaQTdZgqKKn/WSpHFcZ1D9nSrPxUfdrIqQzolN12N6D4g
QAz/3VCGFOdsOFTp3tyc7J2Ofo2OqVjv20l3ekuq6y/RCsT5ade36j4aWkgo
3f8jqgLNH7E1y6Rb0751pGulAk2g4dkwuqeZl4zfdL9B14gqVrp0oy4eYgFU
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
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 3.}, {0., 1.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], InsetBox[
    FractionBox[
     RowBox[{
      SuperscriptBox["3", 
       RowBox[{"2", "/", "3"}]], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["x", "3"], 
         RowBox[{"3", " ", "k"}]]}]]}], 
     RowBox[{
      RadicalBox["k", "3"], " ", 
      TemplateBox[{
        FractionBox["1", "3"]},
       "Gamma"]}]], {2.2, 0.6}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox[
      TagBox["x", HoldForm], HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"pdf\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"ME density on [0,\[Infinity]] with E[\\!\\(\\*SuperscriptBox[\\(X\\), \
\\(3\\)]\\)]=k and k=1\"", TraditionalForm],
  PlotRange->{{0., 3.}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{{3.9565623161513367`*^9, 
  3.9565623161984196`*^9}},ExpressionUUID->"0c61e742-c188-2e45-92c5-\
e36b64d46e06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Known", " ", "third", " ", "moment", " ", "on", " ", "real", " ", 
    "domain"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "k", "]"}], "\n", 
   RowBox[{
    RowBox[{"bounds", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x_", "]"}], ":=", 
     SuperscriptBox["x", "3"]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"F", "=", " ", "k"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"assumptions", " ", "=", "  ", 
     RowBox[{"k", ">", "0"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"pThirdReal", "[", "x_", "]"}], "=", 
    RowBox[{
     RowBox[{"findMaxEntropyDistribution", "[", 
      RowBox[{"f", ",", "F", ",", "assumptions", ",", "bounds"}], "]"}], "//",
      "Timing"}]}]}]}]], "Code",
 CellChangeTimes->{{3.9559508071935616`*^9, 3.955950825417364*^9}, {
  3.955950893281067*^9, 3.9559508988523235`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"624b27cd-f90a-b043-8866-57d341d761ba"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 96, 44, 21431459409500383973, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.955950832315073*^9, 3.955950955896303*^9},
 CellLabel->
  "During evaluation of \
In[91]:=",ExpressionUUID->"fbb8fcb3-5e47-704f-9449-bf4b43c0ba52"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \\\"}\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"1\\\"}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"", 2, 
   96, 45, 21431459409500383973, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.955950832315073*^9, 3.955950955927559*^9},
 CellLabel->
  "During evaluation of \
In[91]:=",ExpressionUUID->"975033b4-eb09-4c46-b379-255594477395"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.03125`", ",", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      SuperscriptBox["x", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"a", "/.", "\[VeryThinSpace]", 
        RowBox[{
         RowBox[{"{", "}"}], "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}]], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        SuperscriptBox["x", "3"], " ", 
        RowBox[{"(", 
         RowBox[{"a", "/.", "\[VeryThinSpace]", 
          RowBox[{
           RowBox[{"{", "}"}], "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"k", ">", "0"}]}]}], "]"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.955950855822876*^9, 3.955950960695305*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"6b0158bc-9ba7-aa42-a894-b921c2a863be"]
}, Open  ]],

Cell["No solutions can be found, which is not surprising.", "Text",
 CellChangeTimes->{{3.9559509929004173`*^9, 
  3.955951010562742*^9}},ExpressionUUID->"38530e22-929d-5543-9c9b-\
938adace203e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second moment", "Subsubsection",
 CellChangeTimes->{{3.9559511206645164`*^9, 
  3.9559511291804028`*^9}},ExpressionUUID->"2b376da7-e477-4c4f-8d81-\
312292d1266e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Gaussian", " ", "on", " ", "half", " ", "interval"}], " ", "->", 
    " ", "Exponential"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"bounds", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x_", "]"}], ":=", 
     SuperscriptBox["x", "2"]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"F", "=", " ", "k"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"assumptions", " ", "=", " ", 
     RowBox[{
      RowBox[{"a", "<", "0"}], " ", "&&", " ", 
      RowBox[{"k", ">", "0"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"findMaxEntropyDistribution", "[", 
     RowBox[{"f", ",", "F", ",", "assumptions", ",", "bounds"}], "]"}], "//", 
    "Timing"}]}]}]], "Code",
 CellChangeTimes->{{3.9511958380661793`*^9, 3.9511958843614063`*^9}, {
   3.951195926148403*^9, 3.9511959730763664`*^9}, {3.9559511362008324`*^9, 
   3.9559511573234844`*^9}, 
   3.9559513603275127`*^9},ExpressionUUID->"40e29fe7-a3af-e449-8ad9-\
24917bf8b026"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.078125`", ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], 
        RowBox[{"2", " ", "k"}]]}]], " ", 
     SqrtBox[
      FractionBox["2", "\[Pi]"]]}], 
    SqrtBox["k"]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9511958880265865`*^9, {3.9511959919813175`*^9, 3.9511960202400665`*^9}, {
   3.9559511417258377`*^9, 3.9559511846302147`*^9}},
 CellLabel->
  "Out[111]=",ExpressionUUID->"f1055f05-f3b5-3f4f-b13d-e1e35be7fdb3"]
}, Open  ]],

Cell["(Gives a special case of the normal distribution)", "Text",
 CellChangeTimes->{{3.9560504469452915`*^9, 
  3.956050471459999*^9}},ExpressionUUID->"3efb0ff5-70c2-574d-8457-\
2ed5c24288f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Square root", "Subsubsection",
 CellChangeTimes->{{3.9559511657727737`*^9, 
  3.9559511735627956`*^9}},ExpressionUUID->"0aec9df9-a481-184b-adb5-\
6c2db95fa53b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bounds", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", "x", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"F", "=", " ", "k"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"assumptions", " ", "=", " ", 
   RowBox[{
    RowBox[{"a", "<", "0"}], " ", "&&", " ", 
    RowBox[{"k", ">", "0"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pSqrt", "[", "x_", "]"}], "=", 
  RowBox[{
   RowBox[{"findMaxEntropyDistribution", "[", 
    RowBox[{"f", ",", "F", ",", "assumptions", ",", "bounds"}], "]"}], "//", 
   "Timing"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pSqrt", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"pSqrt", "[", "x", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.9511961820179462`*^9, 3.951196275329626*^9}, {
   3.95595119058712*^9, 3.955951233163822*^9}, 3.95595135355418*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"bb4a4d10-1005-f548-ae21-4eab686ab16b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.5625`", ",", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         SqrtBox["x"]}], "k"]}]]}], 
    SuperscriptBox["k", "2"]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.951196209813654*^9, {3.9511962697280235`*^9, 3.951196279799902*^9}, {
   3.955951190633953*^9, 3.9559512003433247`*^9}, {3.9559512305374603`*^9, 
   3.9559512376512165`*^9}, 3.956050484991791*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"03ce7c74-10b9-2743-8d02-aa7fd757f58b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"pSqrt", "[", "x", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"k", "->", "\[Delta]"}], "}"}]}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}]}], "\n", "\t", "]"}], ",", 
   "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Delta]", ",", "1", ",", "\"\<k\>\""}], "}"}], ",", "0.5", ",",
      "7", ",", " ", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}]}], "\n", 
  "]"}]], "Code",
 CellChangeTimes->{
  3.951196223158539*^9, {3.9559512029389286`*^9, 3.9559512038005447`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"d064f855-64fa-3e43-9096-c521b54d63a6"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Delta]$$ = 3.0500000000000003`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Delta]$$], 1, "k"}, 0.5, 7, ControlType -> 
      Manipulator}}, Typeset`size$$ = {
    259.62, {81.34880222086426, 87.08073581461426}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Delta]$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Plot[
        ReplaceAll[
         $CellContext`pSqrt[$CellContext`x], {$CellContext`k -> $CellContext`\
\[Delta]$$}], {$CellContext`x, 0, 5}, PlotRange -> {{0, 5}, {0, 3}}], 
      "Specifications" :> {{{$CellContext`\[Delta]$$, 1, "k"}, 0.5, 7, 
         Appearance -> "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{304.72, {153.57876795997146`, 159.31070155372146`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.951196269885849*^9, 3.95595126208226*^9, 
  3.9560504852465763`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"68f9c163-d068-d14d-98bb-3f4de8aa8f6d"]
}, Open  ]]
}, Open  ]],

Cell["", "Subsubsection",ExpressionUUID->"aadf426c-5f4c-8347-9689-ba47b1748504"],

Cell[CellGroupData[{

Cell["Truncated normal", "Subsubsection",
 CellChangeTimes->{{3.955951799482279*^9, 
  3.9559518021282883`*^9}},ExpressionUUID->"8ced18c3-58a3-b44d-bdee-\
a3b114e2995d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bounds", "=", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "\n", 
 RowBox[{
  RowBox[{"F", "=", 
   SuperscriptBox["\[Sigma]", "2"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"assumptions", "=", "  ", 
   RowBox[{
    RowBox[{"\[Sigma]", ">", "0"}], " ", "&&", " ", 
    RowBox[{"\[Mu]", "\[Element]", "Reals"}], " ", "&&", "  ", 
    RowBox[{"a", "<", "b"}], " ", "&&", " ", 
    RowBox[{"a", "\[Element]", "Reals"}], " ", "&&", " ", 
    RowBox[{"b", "\[Element]", "Reals"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pNew", "[", "x_", "]"}], "=", 
  RowBox[{
   RowBox[{"findMaxEntropyDistribution", "[", 
    RowBox[{"f", ",", "F", ",", "assumptions", ",", "bounds"}], "]"}], "//", 
   "Timing"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pNew", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"pNew", "[", "x", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.9559513678382034`*^9, 3.955951471838537*^9}, {
  3.9559515218180447`*^9, 3.955951536705822*^9}, {3.955951831431757*^9, 
  3.9559518433711853`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"be84b433-e507-ec4d-afd5-c86c46eed9a3"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "nsmet", 
   "\"This system cannot be solved with the methods available to Solve. Try \
Reduce or FindInstance instead.\"", 2, 153, 64, 21431459409500383973, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.9559514786271935`*^9, 3.9559515491842194`*^9, 
  3.9559518565672894`*^9},
 CellLabel->
  "During evaluation of \
In[149]:=",ExpressionUUID->"94c1f78d-0a53-1f43-a827-4492e2afd1ed"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "nsmet", 
   "\"This system cannot be solved with the methods available to Solve. Try \
Reduce or FindInstance instead.\"", 2, 153, 65, 21431459409500383973, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.9559514786271935`*^9, 3.9559515491842194`*^9, 
  3.9559518635853367`*^9},
 CellLabel->
  "During evaluation of \
In[149]:=",ExpressionUUID->"5419ca50-6dff-9242-894a-e57ba338f7e9"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", RowBox[{\\\"2\\\", \\\" \\\", \\\"a\\\"}]]}], \
\\\"+\\\", FractionBox[RowBox[{FractionBox[RowBox[{\\\"2\\\", \\\" \\\", \\\"\
\[ImaginaryI]\\\", \\\" \\\", SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"+\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\")\\\"}]}], SqrtBox[\\\"\[Pi]\\\
\"]], \\\"+\\\", FractionBox[RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"Times\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]], \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"b\\\", \\\"+\\\", RowBox[{\
\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\")\\\"}]}], \
RowBox[{SqrtBox[RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]], \\\" \\\", \
SqrtBox[\\\"\[Pi]\\\"]}]]}], RowBox[{RowBox[{\\\"\[ImaginaryI]\\\", \\\" \
\\\", RowBox[{\\\"Erf\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{\\\"\
\[ImaginaryI]\\\", \\\" \\\", RowBox[{\\\"Erf\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}]], \
\\\"-\\\", RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{FractionBox[RowBox[{\\\"2\\\", \\\" \\\", \\\"\[ImaginaryI]\\\", \\\" \
\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"Times\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]], \\\" \\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"Power\\\
\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"+\\\", RowBox[{\\\"Times\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\")\\\"}]}], SqrtBox[\\\"\[Pi]\\\"]], \\\"+\\\", \
FractionBox[RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]], \
\\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"b\\\", \\\"+\\\", RowBox[{\\\"Times\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\")\\\"}]}], \
RowBox[{SqrtBox[RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]], \\\" \\\", \
SqrtBox[\\\"\[Pi]\\\"]}]]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", \
TagBox[GridBox[{{\\\"\[Piecewise]\\\", GridBox[{{\\\"0\\\", \
RowBox[{\\\"Greater\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}, {\\\"Indeterminate\\\", \
TagBox[\\\"True\\\", \\\"PiecewiseDefault\\\", Rule[AutoDelete, True]]}}, \
Rule[ColumnAlignments, List[Left]], Rule[ColumnSpacings, 1.2`], \
Rule[ColumnWidths, Automatic], Rule[AllowedDimensions, List[2, Automatic]], \
Rule[Selectable, True], Rule[Editable, True]]}}, Rule[ColumnAlignments, \
List[Left]], Rule[ColumnSpacings, 0.5`], Rule[ColumnWidths, Automatic]], \
\\\"Piecewise\\\", Rule[SyntaxForm, Equal], Rule[SelectWithContents, True], \
Rule[StripWrapperBoxes, True], Rule[Selectable, False], Rule[Editable, \
False], Rule[DeleteWithContents, True]], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"Arg\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, \
None]], \\\"[\\\", RowBox[{RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", RowBox[{\
\\\"Erf\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{\\\"\[ImaginaryI]\\\
\", \\\" \\\", RowBox[{\\\"Erf\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}]}], \\\"]\\\"}]}]}], \\\"\[Equal]\\\", \
SuperscriptBox[\\\"\[Sigma]\\\", \\\"2\\\"]}], \\\"}\\\"}]\\) is neither a \
list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing.\"", 2, 153, 66, 21431459409500383973, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.9559514786271935`*^9, 3.9559515491842194`*^9, 
  3.9559518636009636`*^9},
 CellLabel->
  "During evaluation of \
In[149]:=",ExpressionUUID->"2b858685-3b6c-4f4b-924d-56d4233657b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.90625`", ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"a", "/.", "\[VeryThinSpace]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", 
            RowBox[{"2", " ", "a"}]]}], "+", 
          FractionBox[
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", "\[ImaginaryI]", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"a", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"a", "-", "\[Mu]"}], ")"}], "2"]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                SqrtBox[
                 RowBox[{"-", "a"}]], "-", 
                FractionBox[
                 RowBox[{"a", "-", "\[Mu]"}], 
                 RowBox[{"2", " ", 
                  SqrtBox[
                   RowBox[{"-", "a"}]]}]]}], ")"}]}], 
             SqrtBox["\[Pi]"]], "+", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"a", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"b", "-", "\[Mu]"}], ")"}], "2"]}]], " ", 
              RowBox[{"(", 
               RowBox[{"b", "-", "\[Mu]"}], ")"}]}], 
             RowBox[{
              SqrtBox[
               RowBox[{"-", "a"}]], " ", 
              SqrtBox["\[Pi]"]}]]}], 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Erf", "[", 
              RowBox[{
               SqrtBox[
                RowBox[{"-", "a"}]], " ", 
               RowBox[{"(", 
                RowBox[{"a", "-", "\[Mu]"}], ")"}]}], "]"}]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Erf", "[", 
              RowBox[{
               SqrtBox[
                RowBox[{"-", "a"}]], " ", 
               RowBox[{"(", 
                RowBox[{"b", "-", "\[Mu]"}], ")"}]}], "]"}]}]}]], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"2", " ", "\[ImaginaryI]", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"a", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"a", "-", "\[Mu]"}], ")"}], "2"]}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 SqrtBox[
                  RowBox[{"-", "a"}]], "-", 
                 FractionBox[
                  RowBox[{"a", "-", "\[Mu]"}], 
                  RowBox[{"2", " ", 
                   SqrtBox[
                    RowBox[{"-", "a"}]]}]]}], ")"}]}], 
              SqrtBox["\[Pi]"]], "+", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"a", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"b", "-", "\[Mu]"}], ")"}], "2"]}]], " ", 
               RowBox[{"(", 
                RowBox[{"b", "-", "\[Mu]"}], ")"}]}], 
              RowBox[{
               SqrtBox[
                RowBox[{"-", "a"}]], " ", 
               SqrtBox["\[Pi]"]}]]}], ")"}], " ", 
           RowBox[{"(", 
            TagBox[GridBox[{
               {"\[Piecewise]", GridBox[{
                  {"0", 
                   RowBox[{
                    RowBox[{
                    FractionBox["1", "4"], "-", 
                    FractionBox[
                    RowBox[{"Arg", "[", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Erf", "[", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"-", "a"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"a", "-", "\[Mu]"}], ")"}]}], "]"}]}], "-", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Erf", "[", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"-", "a"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"b", "-", "\[Mu]"}], ")"}]}], "]"}]}]}], "]"}], 
                    RowBox[{"2", " ", "\[Pi]"}]]}], ">", 
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    FractionBox["1", "4"], "-", 
                    FractionBox[
                    RowBox[{"Arg", "[", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Erf", "[", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"-", "a"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"a", "-", "\[Mu]"}], ")"}]}], "]"}]}], "-", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Erf", "[", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"-", "a"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"b", "-", "\[Mu]"}], ")"}]}], "]"}]}]}], "]"}], 
                    RowBox[{"2", " ", "\[Pi]"}]]}], "]"}]}]},
                  {"Indeterminate", 
                   TagBox["True",
                    "PiecewiseDefault",
                    AutoDelete->True]}
                 },
                 AllowedDimensions->{2, Automatic},
                 Editable->True,
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                 Selectable->True]}
              },
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.35]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}}],
             "Piecewise",
             DeleteWithContents->True,
             Editable->False,
             SelectWithContents->True,
             Selectable->False,
             StripWrapperBoxes->True], ")"}], " ", 
           RowBox[{
            SuperscriptBox["Arg", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Erf", "[", 
               RowBox[{
                SqrtBox[
                 RowBox[{"-", "a"}]], " ", 
                RowBox[{"(", 
                 RowBox[{"a", "-", "\[Mu]"}], ")"}]}], "]"}]}], "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Erf", "[", 
               RowBox[{
                SqrtBox[
                 RowBox[{"-", "a"}]], " ", 
                RowBox[{"(", 
                 RowBox[{"b", "-", "\[Mu]"}], ")"}]}], "]"}]}]}], "]"}]}]}], "\[Equal]", 
         SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]], "/", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"a", "/.", "\[VeryThinSpace]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", 
              RowBox[{"2", " ", "a"}]]}], "+", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"a", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"a", "-", "\[Mu]"}], ")"}], "2"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{"-", "a"}]], "-", 
                  FractionBox[
                   RowBox[{"a", "-", "\[Mu]"}], 
                   RowBox[{"2", " ", 
                    SqrtBox[
                    RowBox[{"-", "a"}]]}]]}], ")"}]}], 
               SqrtBox["\[Pi]"]], "+", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"a", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"b", "-", "\[Mu]"}], ")"}], "2"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"b", "-", "\[Mu]"}], ")"}]}], 
               RowBox[{
                SqrtBox[
                 RowBox[{"-", "a"}]], " ", 
                SqrtBox["\[Pi]"]}]]}], 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"Erf", "[", 
                RowBox[{
                 SqrtBox[
                  RowBox[{"-", "a"}]], " ", 
                 RowBox[{"(", 
                  RowBox[{"a", "-", "\[Mu]"}], ")"}]}], "]"}]}], "-", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"Erf", "[", 
                RowBox[{
                 SqrtBox[
                  RowBox[{"-", "a"}]], " ", 
                 RowBox[{"(", 
                  RowBox[{"b", "-", "\[Mu]"}], ")"}]}], "]"}]}]}]], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"a", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "-", "\[Mu]"}], ")"}], "2"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{"-", "a"}]], "-", 
                   FractionBox[
                    RowBox[{"a", "-", "\[Mu]"}], 
                    RowBox[{"2", " ", 
                    SqrtBox[
                    RowBox[{"-", "a"}]]}]]}], ")"}]}], 
                SqrtBox["\[Pi]"]], "+", 
               FractionBox[
                RowBox[{"\[ImaginaryI]", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"a", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"b", "-", "\[Mu]"}], ")"}], "2"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{"b", "-", "\[Mu]"}], ")"}]}], 
                RowBox[{
                 SqrtBox[
                  RowBox[{"-", "a"}]], " ", 
                 SqrtBox["\[Pi]"]}]]}], ")"}], " ", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {"\[Piecewise]", GridBox[{
                    {"0", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "4"], "-", 
                    FractionBox[
                    RowBox[{"Arg", "[", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Erf", "[", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"-", "a"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"a", "-", "\[Mu]"}], ")"}]}], "]"}]}], "-", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Erf", "[", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"-", "a"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"b", "-", "\[Mu]"}], ")"}]}], "]"}]}]}], "]"}], 
                    RowBox[{"2", " ", "\[Pi]"}]]}], ">", 
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    FractionBox["1", "4"], "-", 
                    FractionBox[
                    RowBox[{"Arg", "[", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Erf", "[", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"-", "a"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"a", "-", "\[Mu]"}], ")"}]}], "]"}]}], "-", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Erf", "[", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"-", "a"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"b", "-", "\[Mu]"}], ")"}]}], "]"}]}]}], "]"}], 
                    RowBox[{"2", " ", "\[Pi]"}]]}], "]"}]}]},
                    {"Indeterminate", 
                    TagBox["True",
                    "PiecewiseDefault",
                    AutoDelete->True]}
                   },
                   AllowedDimensions->{2, Automatic},
                   Editable->True,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                   Selectable->True]}
                },
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
               "Piecewise",
               DeleteWithContents->True,
               Editable->False,
               SelectWithContents->True,
               Selectable->False,
               StripWrapperBoxes->True], ")"}], " ", 
             RowBox[{
              SuperscriptBox["Arg", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                RowBox[{"Erf", "[", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{"-", "a"}]], " ", 
                  RowBox[{"(", 
                   RowBox[{"a", "-", "\[Mu]"}], ")"}]}], "]"}]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                RowBox[{"Erf", "[", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{"-", "a"}]], " ", 
                  RowBox[{"(", 
                   RowBox[{"b", "-", "\[Mu]"}], ")"}]}], "]"}]}]}], "]"}]}]}],
            "\[Equal]", 
           SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{
        RowBox[{"\[Sigma]", ">", "0"}], "&&", 
        RowBox[{"\[Mu]", "\[Element]", 
         TemplateBox[{},
          "Reals"]}], "&&", 
        RowBox[{"a", "<", "b"}], "&&", 
        RowBox[{"a", "\[Element]", 
         TemplateBox[{},
          "Reals"]}], "&&", 
        RowBox[{"b", "\[Element]", 
         TemplateBox[{},
          "Reals"]}]}]}]}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.9559514914622536`*^9, 3.955951557187538*^9, 
  3.9559518648673973`*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"5d628132-68b0-6a4e-b6bc-b8129ec0123a"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.9559518813986874`*^9, 
  3.9559518870471783`*^9}},ExpressionUUID->"4827d0a3-934c-f84a-ac11-\
7f4c93b84030"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{562, 677.5},
WindowMargins->{{Automatic, -4.5}, {Automatic, 0}},
FrontEndVersion->"14.2 for Microsoft Windows (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b2959918-601b-6d49-819c-ccb61e3fc9f2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 171, 3, 157, "Title",ExpressionUUID->"5415a105-1f06-b548-b338-529004f56948"],
Cell[750, 27, 191, 4, 33, "Text",ExpressionUUID->"e86dbde9-e93a-4548-a41c-726748731862"],
Cell[944, 33, 6901, 172, 559, "Code",ExpressionUUID->"62ecd7df-e04d-8849-9b3d-73c7496b3251"],
Cell[CellGroupData[{
Cell[7870, 209, 223, 4, 53, "Subsection",ExpressionUUID->"8a269a2c-b42e-6047-957d-95344a223a8d"],
Cell[8096, 215, 1301, 29, 103, "Code",ExpressionUUID->"690ae404-30c7-0f49-9a54-ff88825b8c2d"],
Cell[CellGroupData[{
Cell[9422, 248, 547, 11, 50, "Code",ExpressionUUID->"369d5bbe-8f16-5542-89f0-5aa90bc7a052"],
Cell[9972, 261, 814, 19, 66, "Output",ExpressionUUID->"8e47f4ce-0545-694a-b20a-88ea4c5f3fa2"]
}, Open  ]],
Cell[10801, 283, 346, 5, 33, "Text",ExpressionUUID->"dc96835f-81a4-2b4f-a954-0d4b0e5d0b93"],
Cell[CellGroupData[{
Cell[11172, 292, 1383, 37, 172, "Code",ExpressionUUID->"34947bb2-c521-9e41-8475-1e3b363aff47",
 InitializationCell->True],
Cell[12558, 331, 2478, 46, 361, "Output",ExpressionUUID->"f93ae575-084c-f04e-9d3a-f1b3b9a5c6e4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15085, 383, 209, 4, 53, "Subsection",ExpressionUUID->"18fcb4b8-6d32-ab4f-9513-2228ea15f8b9"],
Cell[15297, 389, 1158, 27, 102, "Code",ExpressionUUID->"73437db2-248e-9347-a2df-146a6ecb5505"],
Cell[CellGroupData[{
Cell[16480, 420, 474, 9, 50, "Code",ExpressionUUID->"08c32365-3cff-0845-932f-aaf34f68a72a"],
Cell[16957, 431, 589, 13, 56, "Output",ExpressionUUID->"43590d29-8e7b-f640-b02e-8434a7deb41c"]
}, Open  ]],
Cell[17561, 447, 333, 5, 33, "Text",ExpressionUUID->"99a855a4-df3d-2c4c-8f90-ac701c33ddca"],
Cell[CellGroupData[{
Cell[17919, 456, 1342, 35, 172, "Code",ExpressionUUID->"6ceb6a7a-0c8e-314e-b0de-11856197ed79"],
Cell[19264, 493, 2469, 46, 32, "Output",ExpressionUUID->"0437cbff-33e5-c549-b6e5-06256284f4ac"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21782, 545, 214, 4, 53, "Subsection",ExpressionUUID->"3a0d2b81-2f2d-a349-aa5c-1e7ad238b90f"],
Cell[21999, 551, 939, 21, 102, "Code",ExpressionUUID->"98236043-0a55-2544-a4c7-44a125b0ffa6"],
Cell[CellGroupData[{
Cell[22963, 576, 631, 11, 50, "Code",ExpressionUUID->"11f03299-e598-0a4f-a934-c466b615f12b"],
Cell[23597, 589, 686, 12, 32, "Output",ExpressionUUID->"fb3833fe-4b58-8749-9b47-9ba7dd511076"]
}, Open  ]],
Cell[24298, 604, 284, 4, 33, "Text",ExpressionUUID->"edcf18fa-e832-d44c-b7bb-72d9b016c547"],
Cell[CellGroupData[{
Cell[24607, 612, 972, 24, 155, "Code",ExpressionUUID->"2af60dc8-464c-f144-82e1-39c89c704bbd"],
Cell[25582, 638, 2114, 40, 339, "Output",ExpressionUUID->"657d42e7-fa93-9f4e-a81a-2380a8ef3643"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27745, 684, 156, 3, 53, "Subsection",ExpressionUUID->"060bf144-0cc8-1447-8aec-578f39d68506"],
Cell[27904, 689, 867, 22, 120, "Code",ExpressionUUID->"364301af-e461-2945-af0c-62d703020152"],
Cell[CellGroupData[{
Cell[28796, 715, 567, 10, 50, "Code",ExpressionUUID->"ad6ee6df-417e-bd4f-91e2-43336cb96ab2"],
Cell[29366, 727, 706, 13, 32, "Output",ExpressionUUID->"400add9d-3f58-1344-8a6c-e5458dc8d893"]
}, Open  ]],
Cell[30087, 743, 238, 4, 33, "Text",ExpressionUUID->"096a7608-f64f-fd42-b711-1f7475257cba"],
Cell[CellGroupData[{
Cell[30350, 751, 1511, 39, 172, "Code",ExpressionUUID->"ac4b9872-1d8f-4a48-9978-25b310b9afa8"],
Cell[31864, 792, 2500, 46, 351, "Output",ExpressionUUID->"0f3d0f27-2394-f645-a734-0c3d6f1365ef"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34413, 844, 235, 4, 53, "Subsection",ExpressionUUID->"61d2324d-0406-e242-9481-2774605a15e1"],
Cell[34651, 850, 337, 7, 33, "Text",ExpressionUUID->"f0fcdf03-1c44-5141-97b1-414470d9f4ed"],
Cell[34991, 859, 1003, 26, 105, "Code",ExpressionUUID->"b1b3b076-80c6-0042-8653-557b242ea0e4"],
Cell[CellGroupData[{
Cell[36019, 889, 474, 9, 50, "Code",ExpressionUUID->"dbc18a99-b2ef-e04c-8d20-2e24088b2f88"],
Cell[36496, 900, 408, 10, 26, "Message",ExpressionUUID->"f667c5c1-5323-ec45-a883-03ae30c1c2b7"],
Cell[36907, 912, 408, 10, 26, "Message",ExpressionUUID->"7a14c137-1b1c-c641-a2e4-cecbc8b1d3bf"],
Cell[37318, 924, 913, 17, 36, "Message",ExpressionUUID->"4f541d41-f13e-0d41-913e-84effc2126e7"],
Cell[38234, 943, 1069, 20, 50, "Message",ExpressionUUID->"13c9bdee-edf1-c642-bca9-3f4dc1efcce1"],
Cell[39306, 965, 1809, 51, 105, "Output",ExpressionUUID->"0bbb0c69-4cac-ef4a-a6ae-5fc847278fea"]
}, Open  ]],
Cell[41130, 1019, 421, 8, 77, "Text",ExpressionUUID->"5196ed32-9de0-4540-952c-e8595e4decbe"],
Cell[CellGroupData[{
Cell[41576, 1031, 347, 7, 50, "Code",ExpressionUUID->"47473018-46be-7e4c-a4ee-2a167422ef50"],
Cell[41926, 1040, 406, 10, 42, "Message",ExpressionUUID->"be8264e6-1063-c744-ace9-12331309aeeb"],
Cell[42335, 1052, 686, 14, 60, "Message",ExpressionUUID->"3c3c09c6-0362-d14e-85f9-1d9f1664b5ea"],
Cell[43024, 1068, 272, 7, 52, "Output",ExpressionUUID->"61ef0485-9aba-b042-a807-6e015c85f300"]
}, Open  ]],
Cell[43311, 1078, 242, 4, 33, "Text",ExpressionUUID->"f7c1938a-bd52-cb4e-849b-6040e38b2c12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43590, 1087, 177, 3, 53, "Subsection",ExpressionUUID->"0d3fdf4a-51dd-354a-957e-95ed2f728ca3"],
Cell[43770, 1092, 363, 7, 55, "Text",ExpressionUUID->"fa543add-4594-604a-bdce-3092022c7ab5"],
Cell[CellGroupData[{
Cell[44158, 1103, 166, 3, 43, "Subsubsection",ExpressionUUID->"83f774ca-9395-8746-a622-1507d667332d"],
Cell[CellGroupData[{
Cell[44349, 1110, 1661, 40, 173, "Code",ExpressionUUID->"5802b14d-30ba-2b4a-970a-c74793b7573f"],
Cell[46013, 1152, 884, 23, 68, "Output",ExpressionUUID->"d48325de-97a3-c245-a163-fe9b6898450f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46934, 1180, 1368, 33, 155, "Code",ExpressionUUID->"5c37e2fa-95e0-3644-b70e-76fdd2a841be",
 InitializationCell->True],
Cell[48305, 1215, 2318, 43, 329, "Output",ExpressionUUID->"3123cc50-30d1-6a41-be2f-5ef4e78514ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50660, 1263, 2254, 53, 230, "Code",ExpressionUUID->"07def65b-26a6-8e42-b6e1-2b5a8bffb7e1"],
Cell[52917, 1318, 80202, 1367, 267, 61629, 1061, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"7f3b542c-4ec5-aa45-b929-e542974a75f8"]
}, Open  ]],
Cell[133134, 2688, 61758, 1064, 263, "Input",ExpressionUUID->"0c61e742-c188-2e45-92c5-e36b64d46e06"],
Cell[CellGroupData[{
Cell[194917, 3756, 1086, 30, 155, "Code",ExpressionUUID->"624b27cd-f90a-b043-8866-57d341d761ba"],
Cell[196006, 3788, 425, 10, 26, "Message",ExpressionUUID->"fbb8fcb3-5e47-704f-9449-bf4b43c0ba52"],
Cell[196434, 3800, 632, 13, 44, "Message",ExpressionUUID->"975033b4-eb09-4c46-b379-255594477395"],
Cell[197069, 3815, 1111, 28, 94, "Output",ExpressionUUID->"6b0158bc-9ba7-aa42-a894-b921c2a863be"]
}, Open  ]],
Cell[198195, 3846, 195, 3, 33, "Text",ExpressionUUID->"38530e22-929d-5543-9c9b-938adace203e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198427, 3854, 168, 3, 43, "Subsubsection",ExpressionUUID->"2b376da7-e477-4c4f-8d81-312292d1266e"],
Cell[CellGroupData[{
Cell[198620, 3861, 1081, 30, 138, "Code",ExpressionUUID->"40e29fe7-a3af-e449-8ad9-24917bf8b026"],
Cell[199704, 3893, 568, 17, 69, "Output",ExpressionUUID->"f1055f05-f3b5-3f4f-b13d-e1e35be7fdb3"]
}, Open  ]],
Cell[200287, 3913, 193, 3, 33, "Text",ExpressionUUID->"3efb0ff5-70c2-574d-8457-2ed5c24288f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200517, 3921, 166, 3, 43, "Subsubsection",ExpressionUUID->"0aec9df9-a481-184b-adb5-6c2db95fa53b"],
Cell[CellGroupData[{
Cell[200708, 3928, 1061, 30, 137, "Code",ExpressionUUID->"bb4a4d10-1005-f548-ae21-4eab686ab16b"],
Cell[201772, 3960, 589, 15, 58, "Output",ExpressionUUID->"03ce7c74-10b9-2743-8d02-aa7fd757f58b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202398, 3980, 1010, 28, 155, "Code",ExpressionUUID->"d064f855-64fa-3e43-9096-c521b54d63a6"],
Cell[203411, 4010, 2066, 39, 329, "Output",ExpressionUUID->"68f9c163-d068-d14d-98bb-3f4de8aa8f6d"]
}, Open  ]]
}, Open  ]],
Cell[205504, 4053, 80, 0, 43, "Subsubsection",ExpressionUUID->"aadf426c-5f4c-8347-9689-ba47b1748504"],
Cell[CellGroupData[{
Cell[205609, 4057, 169, 3, 35, "Subsubsection",ExpressionUUID->"8ced18c3-58a3-b44d-bdee-a3b114e2995d"],
Cell[CellGroupData[{
Cell[205803, 4064, 1322, 37, 138, "Code",ExpressionUUID->"be84b433-e507-ec4d-afd5-c86c46eed9a3"],
Cell[207128, 4103, 462, 11, 44, "Message",ExpressionUUID->"94c1f78d-0a53-1f43-a827-4492e2afd1ed"],
Cell[207593, 4116, 462, 11, 44, "Message",ExpressionUUID->"5419ca50-6dff-9242-894a-e57ba338f7e9"],
Cell[208058, 4129, 4856, 71, 289, "Message",ExpressionUUID->"2b858685-3b6c-4f4b-924d-56d4233657b2"],
Cell[212917, 4202, 16275, 419, 342, "Output",ExpressionUUID->"5d628132-68b0-6a4e-b6bc-b8129ec0123a"]
}, Open  ]],
Cell[229207, 4624, 146, 3, 33, "Text",ExpressionUUID->"4827d0a3-934c-f84a-ac11-7f4c93b84030"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

